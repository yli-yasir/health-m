{"version":3,"sources":["App/routePaths.js","utils/formikUtils.js","models/user.js","components/inputs/ProgressButton.jsx","components/LoginForm/validationSchema.js","utils/URLUtils.js","utils/APIUtils.js","components/LoginForm/initialValues.js","hooks/useFetch.js","components/inputs/TextField.jsx","components/inputs/FormikTextField.jsx","components/Snackbar/index.jsx","constants/httpStatusCodes.js","components/LoginForm/index.jsx","assets/logo.svg","components/icons/Logo.jsx","redux/actionTypes.js","redux/actions.js","pages/Login/index.jsx","components/SimpleDivider/index.jsx","components/layout/Section.jsx","components/PatientForm/inputNames.js","components/inputs/RadioGroup.jsx","components/inputs/FormikRadioGroup.jsx","components/inputs/DatePicker.jsx","components/inputs/FormikDatePicker.jsx","components/inputs/PhoneField.jsx","components/inputs/FormikPhoneField.jsx","components/inputs/Checkbox.jsx","components/inputs/CheckboxedTextField.jsx","components/inputs/FormikCheckboxedTextField.jsx","components/PedigreeChart/FamilyNodeDialog.jsx","assets/delete.svg","assets/family.svg","components/PedigreeChart/pedigreeChart.js","components/PedigreeChart/index.jsx","components/PatientForm/sections/PedigreeChartSection.jsx","components/inputs/Select.jsx","components/PatientForm/medicalCodes.js","components/PatientForm/sections/DiagnosisTreatmentSection.jsx","components/PatientForm/sections/index.js","components/PatientForm/sections/PatientNameSection.jsx","components/PatientForm/sections/PatientBodySection.jsx","components/PatientForm/sections/PatientContactInfoSection.jsx","components/PatientForm/sections/PatientAdmissionSection.jsx","components/PatientForm/sections/FamilySection.jsx","components/PatientForm/sections/DoctorNotesSection.jsx","components/PatientForm/validationSchema.js","components/PatientForm/index.jsx","components/PatientForm/initialValues.js","components/Drawer/Sidebar.jsx","components/List/index.js","components/List/ListItem.jsx","components/List/ListItemLink.jsx","components/Drawer/navLinks.js","components/Drawer/index.jsx","components/AppBar/AppBarSpace.jsx","components/AppBar/index.jsx","components/layout/Page.jsx","components/layout/ResponsivePaper.jsx","components/PatientForm/mapping.js","pages/AddPatient/index.jsx","components/SearchBar/SearchInput.jsx","components/SearchBar/SuggestionsContainer.jsx","components/SearchBar/Suggestion.jsx","components/SearchBar/useAutoSuggestTheme.js","components/SearchBar/index.jsx","components/SearchBar/useAutoSuggestAsync.js","pages/SearchPatients/PatientSearchBar.jsx","assets/boy.svg","assets/girl.svg","pages/SearchPatients/PatientCard.jsx","pages/SearchPatients/SearchResultsGrid.jsx","components/LoadingBox/index.jsx","pages/SearchPatients/usePatientSearch.js","hooks/useQuery.js","components/List/InfoItem.jsx","components/PedigreeChart/StaticPedigreeChart.jsx","components/PedigreeChart/StaticPedigreeChartDialog.jsx","pages/ViewPatient/PatientInfoList.jsx","utils/stringUtils.js","pages/ViewPatient/DeletePatientDialog.jsx","pages/ViewPatient/PatientControls.jsx","pages/ViewPatient/index.jsx","models/patient.js","pages/Stats/FilterPanel.jsx","pages/Stats/chartUtils.js","pages/Stats/useChartData.js","pages/Settings/index.jsx","redux/mapState.js","App/routes.js","pages/EditPatient/index.jsx","pages/EditPatient/usePatientInputValues.js","pages/SearchPatients/index.js","pages/Stats/index.jsx","components/layout/Main.jsx","App/GuardedApp.jsx","components/LoadingBackdrop/index.jsx","App/index.js","constants/langauges.js","redux/reducers/language.js","redux/reducers/message.js","redux/reducers/loggedIn.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SEARCH_PATH","LOGIN_PATH","ADD_PATIENT_PATH","STATS_PATH","VIEW_PATIENT_PATH","getTouchedErrors","touched","errors","touchedErrors","Object","entries","key","value","schema","ProgressButton","props","isWorking","rest","Button","disabled","CircularProgress","color","size","children","validationSchema","yup","shape","email","required","password","buildQueryString","oldQueryString","options","params","URLSearchParams","keys","forEach","set","delete","toString","makePatientLink","patientId","BASE_URL","process","TOKEN_KEY","getAuthHeaders","localStorage","getItem","searchPatients","term","limit","page","a","queryString","q","axios","get","response","data","addPatient","patient","post","res","headers","location","match","getPatient","id","updatePatient","update","patch","deletePatient","login","credentials","setItem","token","defaults","verifyLoggedIn","useFetch","asyncFn","callbacks","deps","useAsyncFn","fetchState","fetchFn","useEffect","onLoad","loading","onError","error","onSuccess","TextField","React","forwardRef","ref","variant","fullWidth","margin","autoComplete","FormikTextField","name","formikBag","defaultHelperText","otherProps","values","onChange","onBlur","Boolean","helperText","Snackbar","message","setMessage","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","open","event","reason","useStyles","makeStyles","theme","form","width","submitButton","marginTop","spacing","LoginFormFormik","useState","feedbackMessage","setFeedbackMessage","submitState","failMessage","status","handleSubmit","initialValues","onSubmit","LoginForm","console","log","setLoggedIn","handleChange","handleBlur","isSubmitting","classes","userSchema","label","type","className","Logo","src","logoSvg","alt","SET_LANGUAGE","SET_MESSAGE","SET_LOGGED_IN","loggedIn","payload","formContainer","padding","display","flexDirection","alignItems","connect","state","Box","justifyContent","height","to","Slide","direction","in","timeout","Paper","Typography","divider","HMDivider","Divider","root","light","FormSection","Fragment","gutterBottom","title","SimpleDivider","FULL_NAME","GENDER","EMAIL","BODY_WEIGHT","BIRTH_DATE","ADDRESS","PHONE_NUMBER","PEDIGREE_CHART","ADMITTOR_NAME","ADMISSION_DATE","PARENTS_SEPARATED","PARENTS_SEPARATED_DESCRIPTION","PARENTS_DIVORCED","PARENTS_DIVORCED_DESCRIPTION","PARENTS_DIED","PARENTS_DIED_DESCRIPTION","STEP_FAMILY","STEP_FAMILY_DESCRIPTION","DOCTOR_NOTES","DIAGNOSIS_TREATMENT","RadioGroup","FormControl","component","FormLabel","aria-label","row","radios","map","radio","FormControlLabel","control","Radio","FormikRadioGroup","HMDatePicker","disableToolbar","format","KeyboardButtonProps","FormikDatePicker","setFieldValue","date","PhoneField","InputProps","inputComponent","TextMaskCustom","InputLabelProps","shrink","inputRef","other","useImperativeHandle","focus","current","mask","placeholderChar","showMask","inputElement","FormikPhoneField","checkBoxRoot","Checkbox","checkBoxProps","CheckboxedText","checkboxName","checked","isChecked","onCheckboxChange","checkboxLabel","textFieldValue","onTextFieldChange","textFieldName","textFieldError","multiline","rows","FormikCheckboxedText","e","target","FamilyNodeDialog","setName","gender","setGender","Dialog","isOpen","onEnter","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","onConfirm","PedigreeChartCanvas","canvasId","onRemoveControlClick","onAddControlClick","setBackgroundColor","BACKGROUND_COLOR","setDimensions","DIMENSIONS","_createCustomControls","on","_trackFamilyMemberNodes","removeIcon","makeImageElement","removeIconSrc","addIcon","addIconSrc","fabric","prototype","controls","removeControl","Control","x","y","offsetY","offsetX","cursorStyle","render","this","_renderControl","mouseUpHandler","cornerSize","addControl","icon","ctx","left","top","styleOverride","fabricObject","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","relatedFamilyMemberNode","familyMemberNode","_makeFamilyMemberNode","connectionLine","_connectFamilyMemberNodes","add","sendToBack","_isLoneNode","Error","_isIntermediateNode","_hasTerminalConnectionLine","_removeTerminalConnectionLine","_hasOriginConnectionLines","_removeOriginConnectionLines","remove","requestRenderAll","_hasObjectWithId","Text","COMMON_FAMILY_NODE_CONFIG","fontSize","FONT_SIZE","fontFamily","FONT_FAMILY","_makeFamilyMemberNodeShape","Group","originConnectionLines","terminalConnectionLine","Rect","fill","FAMILY_NODE_PADDING","rx","ry","Circle","radius","familyNode","length","_connectionLineCount","moveEvent","movingFamilyNode","line","x1","y1","x2","y2","renderAll","fromNode","toNode","_makeConnectionLine","push","getObjects","filter","obj","coords","fromNodeId","toNodeId","Line","CONNECTION_LINE_COLOR","stroke","strokeWidth","selectable","evented","originNode","_findFamilyMemberNodeById","originLine","json","Canvas","imgElement","document","createElement","PedigreeChart","isFamilyDialogOpen","setFamilyDialogOpen","isSnackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","canvasRef","useRef","dialogOriginRef","handleRemoveControlClick","eventData","removeFamilyMemberNode","openSnackbar","handleAddControlClick","msg","canvas","chartData","loadFromJSON","addFamilyMemberNode","saveChart","JSON","stringify","paddingTop","originX","originY","toolbar","mixins","PedigreeChartAppBar","handleClose","AppBar","appBar","Toolbar","IconButton","edge","Close","formControl","maxWidth","HMSelect","InputLabel","Select","items","item","MenuItem","NULL_MEDICAL_CODE","paper","marginBottom","backgroundColor","palette","grey","dataset","code","getTreatmentError","index","diagnosisTreatment","treatment","sections","startAdornment","InputAdornment","position","maxDate","Date","getFullYear","getMonth","setOpen","fullScreen","TransitionComponent","medicalCode","itemKey","treatmentError","diagnosis","AddCircle","diagnosisTreatmentSchema","max","fullName","min","bodyWeight","address","phoneNumber","transform","val","replace","admittorName","parentsSeparatedDescription","optional","parentsDivorcedDescription","parentsDiedDescription","stepFamilyDescription","of","doctorNotes","PatientFormContainer","renderPatientForm","isValid","utils","DateFnsUtils","style","preventDefault","elemName","getElementsByName","getElementWithError","Section","getInitialValues","todaysDate","lastYearsDate","names","drawer","flexShrink","drawerPaper","logoBar","maxHeight","logo","marginRight","activeLink","secondary","main","listItemRoot","Sidebar","Drawer","anchor","List","ListItem","text","ListItemIcon","ListItemText","primary","ListItemLink","linkProps","nav","NavLink","activeClassName","exact","Link","button","navLinks","AddCircleOutline","SearchOutlined","DonutLargeOutlined","toggleDrawer","navLink","ExitToApp","AppBarSpace","menuButton","marginLeft","isDrawerOpen","setDrawerOpen","Menu","flexGrow","Page","minHeight","breakpoints","up","centerContent","ResponsivePaper","propClassName","remainingProps","elevation","valuesToPatient","diagnosisTreatmentObj","reduce","acc","pair","patientToValues","diagnosisTreatmentArray","_diagnosisTreatmentObjToArray","SearchInput","onSearch","useHistory","placeholder","endAdornment","SuggestionsContainer","Suggestion","useAutoSuggestTheme","autoSuggestRoot","container","suggestionsContainer","zIndex","listStyleType","suggestion","userSelect","suggestionHighlighted","SearchBar","getSuggestions","getSuggestionValue","onSuggestionSelected","suggestions","setSuggestions","suggestionsFetchState","fetchSuggestions","useAutoSuggestAsync","onSuggestionsFetchRequested","onSuggestionsClearRequested","inputProps","renderInputComponent","renderSuggestionsContainer","containerProps","renderSuggestion","suggestionValue","searchBar","PatientSearchBar","setValue","history","newValue","inputValue","cardImg","objectFit","PatientCard","Card","CardActionArea","_id","CardMedia","image","boySvg","girlSvg","img","CardContent","SearchResultsContainer","results","flexWrap","TransitionGroup","enter","Zoom","LoadingBox","errorMessage","usePatientSearch","searchTerm","useLocation","search","setPage","totalResults","setTotalResults","useAsync","newResults","prevResults","hasMoreResults","InfoItem","PropIcon","content","StaticPedigreeChart","failComponent","canvasProps","loadFailed","setLoadFailed","fabricCanvas","StaticCanvas","StaticPedigreeChartDialog","p","infoList","PatientInfoList","string","isPedigreeChartDialogOpen","setPedigreeChartDialogOpen","birthDate","admissionDate","parentsSeparated","parentsDied","parentsDivorced","stepFamily","pedigreeChart","AssignmentOutlined","PermIdentityOutlined","charAt","toUpperCase","slice","CakeOutlined","toDateString","AssessmentOutlined","LocationOnOutlined","PermPhoneMsgOutlined","EmailOutlined","TodayOutlined","EventAvailableOutlined","PageviewOutlined","AccountTreeOutlined","HealingOutlined","DeletePatientDialog","onDelete","confirmationWord","enteredConfirmationWord","setEnteredConfirmationWord","aria-labelledby","autoFocus","fab","bottom","right","PatientControls","isDeleteDialogOpen","setIsDeleteDialogOpen","shouldRedirect","setShouldRedirect","delPatient","deletionState","hasDeleted","startIcon","DeleteForeverOutlined","Fab","EditOutlined","patientImg","borderRadius","filterButton","checkboxes","patientSchema","DatasetFilterPanel","setFilter","isFilterActive","setIsFilterActive","handleCheckboxChange","newFilter","FilterList","makeChartData","patients","medicalCodeCount","medicalCodesCount","i","patientMedicalCodes","j","patientMedicalCode","oldCount","_getMedicalCodeCount","labels","colorCount","medicalCodeColors","medicalCodeBorderColors","_getMedicalCodeColors","datasets","hoverBackgroundColor","hoverBorderColor","borderColor","borderWidth","blankChartData","useChartData","patientsLoadState","setChartData","isPatientMatch","filterPatients","language","setLanguage","anim","setAnim","points","routes","path","Component","useParams","patientLoadState","patientInputValues","setPatientInputValues","usePatientInputValues","isPatientLoading","patientLoadError","inputValues","upPatient","patientUpdateState","as","inView","mt","Settings","Main","GuardedApp","route","backdrop","dark","progress","LoadingBackdrop","Backdrop","LinearProgress","loginVerification","CssBaseline","LoginPage","ENGLISH","action","Type","combineReducers","createStore","rootReducer","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.3e38a9be.chunk.js","sourcesContent":["export const SEARCH_PATH = \"/search\";\nexport const LOGIN_PATH = \"/login\";\nexport const ADD_PATIENT_PATH = \"/add\";\nexport const SETTINGS_PATH= \"/settings\";\nexport const STATS_PATH = \"/stats\";\nexport const VIEW_PATIENT_PATH= \"/patients/:id\"\nexport const EDIT_PATIENT_PATH = VIEW_PATIENT_PATH + \"/edit\";","export function getTouchedErrors(touched, errors) {\n  const touchedErrors = {};\n\n  for (const [key, value] of Object.entries(errors)) {\n    if (touched[key] && errors[key]) {\n      touchedErrors[key] = value;\n    }\n  }\n  return touchedErrors;\n}\n\nexport function getElementWithError(errors){\n  const elemName = Object.keys(errors)[0];\n  console.log(elemName);\n  return document.getElementsByName(elemName)[0];\n}\n\n","export const schema=  {\n    EMAIL: 'email',\n    PASSWORD: 'password'\n}","import { Button,CircularProgress } from \"@material-ui/core\";\n\nexport default function ProgressButton(props) {\n    const {isWorking,...rest} = props;\n  return (\n    <Button disabled={isWorking} {...rest}>\n      {isWorking && <CircularProgress color=\"secondary\" size={24}/>}\n      {!isWorking  && props.children}\n    </Button>\n  );\n}\n","import * as yup from \"yup\";\n\nconst validationSchema = yup.object().shape({\n    email:yup.string().email().required('Demo Email: admin@healthm.com'),\n    password: yup.string().required(\"Demo Password: admin\")\n}) \n\nexport default validationSchema;","import { SEARCH_PATH } from \"../App/routePaths\";\n\nexport function buildQueryString(oldQueryString, options) {\n  let params = new URLSearchParams(oldQueryString);\n\n  Object.keys(options).forEach((key) => {\n    if (options[key]) {\n      params.set(key, options[key]);\n    } else {\n      params.delete(key);\n    }\n  });\n  return \"?\" + params.toString();\n}\n\nexport function getParamValue(queryString, param) {\n  return new URLSearchParams(queryString).get(param);\n}\n\nexport function makePatientSearchLink(term) {\n  return `/search?q=${term}`;\n}\n\nexport function makePatientLink(patientId) {\n  return `/patients/${patientId}`;\n}\n\nexport function makePatientEditLink(patientId) {\n  return `${makePatientLink(patientId)}/edit`;\n}\n","import axios from \"axios\";\nimport { buildQueryString } from \"./URLUtils\";\nconst BASE_URL = process.env.REACT_APP_API_URL;\nconst TOKEN_KEY= 'healthmtkn';\n\nconst getAuthHeaders = ()=> ({\n  'Authorization': 'Bearer ' + localStorage.getItem(TOKEN_KEY) \n});\n\naxios.defaults.headers = getAuthHeaders();\n\n\nexport async function searchPatients(term, limit, page) {\n  const queryString = buildQueryString(\"\", { q: term, page, limit });\n  const response = await axios.get(`${BASE_URL}/patients${queryString}`);\n  return response.data;\n}\n\nexport async function addPatient(patient) {\n  const res = await axios.post(`${BASE_URL}/patients`, patient);\n  let patientId;\n  //Extract the id out of the response location header\n  patientId = res.headers.location.match(/[^/]+$/g)[0];\n  return patientId;\n}\n\nexport async function getPatient(id) {\n  const res = await axios.get(`${BASE_URL}/patients/${id}`);\n  return res.data;\n}\n\nexport async function updatePatient(id, update) {\n  return await axios.patch(`${BASE_URL}/patients/${id}`, update);\n\n}\n\nexport async function deletePatient(id) {\n  return await axios.delete(`${BASE_URL}/patients/${id}`)\n\n}\n\nexport async function login(credentials) {\n  const response =  await axios.post(`${BASE_URL}/login`, credentials);\n  localStorage.setItem(TOKEN_KEY,response.data.token);\n  //Refresh the default headers with the new token\n  axios.defaults.headers= getAuthHeaders();\n  return response;\n}\n\nexport async function verifyLoggedIn() {\n  return await axios.get(`${BASE_URL}/login`);\n}\n\nexport function logout() {\n  return localStorage.setItem(TOKEN_KEY,'')\n}\n\n","export default { email: \"\", password: \"\" };","import { useAsyncFn } from \"react-use\";\nimport { useEffect } from \"react\";\n\nexport default function useFetch(asyncFn, callbacks = {},deps) {\n  // useAsyncFn will return state and a callback that handles\n  // race conditions, and will only update its state if component is still mounted.\n  const [fetchState, fetchFn] = useAsyncFn(asyncFn,deps);\n\n  useEffect(() => {\n    //onLoad\n    if (callbacks.onLoad && fetchState.loading) {\n      return callbacks.onLoad();\n    }\n\n    //onError\n    if (callbacks.onError && fetchState.error && !fetchState.loading) {\n      return callbacks.onError();\n    }\n\n    //onSuccess\n    if (callbacks.onSuccess && fetchState.value && !fetchState.loading) {\n      return callbacks.onSuccess();\n    }\n  }, [fetchState]);\n\n  return [fetchState, fetchFn];\n}\n","import { TextField as MaterialTextField } from \"@material-ui/core\";\nimport React from 'react';\n\nconst TextField = React.forwardRef((props, ref) => {\n  return (\n    <MaterialTextField\n      ref={ref}\n      variant=\"outlined\"\n      color=\"secondary\"\n      fullWidth={true}\n      margin=\"normal\"\n      autoComplete=\"off\"\n      {...props}\n    />\n  );\n});\n\nexport default TextField;\n","import TextField from \"./TextField\";\n// formikBag prop must contain\n// {values,errors,onChange,onBlur}\nexport default function FormikTextField(props) {\n  const { name, formikBag,defaultHelperText, ...otherProps } = props;\n  const { values, errors, onChange, onBlur } = formikBag;\n  return (\n    <TextField\n      name={name}\n      value={values[name]}\n      error={Boolean(errors[name])}\n      helperText={errors[name] || defaultHelperText}\n      onChange={onChange}\n      onBlur={onBlur}\n      {...otherProps}\n    />\n  );\n}\n","import { Snackbar as MaterialSnackbar } from \"@material-ui/core\";\n\nexport default function Snackbar(props) {\n  const { message,setMessage, autoHideDuration, onClose, ...otherProps } = props;\n  return (\n    <MaterialSnackbar\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      open={Boolean(message)}\n      onClose={(event, reason) => {\n        if (reason === \"clickaway\") {\n          return;\n        }\n        setMessage('');\n        onClose && onClose();\n      }}\n      message={message}\n      autoHideDuration={autoHideDuration || 3000}\n      {...otherProps}\n    />\n  );\n}\n","export const AUTH_FAIL = 401;","import { Formik } from \"formik\";\nimport { getTouchedErrors } from \"../../utils/formikUtils\";\nimport { schema as userSchema } from \"../../models/user\";\nimport ProgressButton from \"../inputs/ProgressButton\";\nimport validationSchema from \"./validationSchema\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { login } from \"../../utils/APIUtils\";\nimport React,{ useState, Fragment } from \"react\";\nimport initialValues from \"./initialValues\";\nimport useFetch from \"../../hooks/useFetch\";\nimport FormikTextField from \"../inputs/FormikTextField\";\nimport Snackbar from \"../Snackbar\";\nimport {SEARCH_PATH} from \"../../App/routePaths\";\nimport {Redirect} from 'react-router-dom';\nimport {AUTH_FAIL} from \"../../constants/httpStatusCodes\";\nconst useStyles = makeStyles((theme) => ({\n  form: { width: \"100%\" },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\n\nexport default function LoginFormFormik(props) {\n\n  const [feedbackMessage, setFeedbackMessage] = useState('')\n\n  const [submitState, handleSubmit] = useFetch(async (values) => await login(values), {\n    onSuccess: () => setFeedbackMessage('Logged in! Redirecting you...'),\n    onError: () => {\n      const error = submitState.error;\n      const failMessage =\n        error.response && error.response.status === AUTH_FAIL\n          ? \"Invalid Credentials. Please try again.\"\n          : \"Something went wrong. Please try again later.\";\n      setFeedbackMessage(failMessage);\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {LoginForm}\n      </Formik>\n      <Snackbar message={feedbackMessage} setMessage={setFeedbackMessage} onClose={() => {\n        console.log('hi')\n        if (submitState.value){\n        props.setLoggedIn(true);\n        }\n      }} />\n    </Fragment>\n\n  );\n}\n\nfunction LoginForm({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n}) {\n\n  const classes = useStyles();\n\n  const formikBag = {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    errors: getTouchedErrors(touched, errors),\n    values\n  };\n\n  return (\n\n    <form onSubmit={handleSubmit}>\n\n      <FormikTextField\n        name={userSchema.EMAIL}\n        label=\"Email\"\n        defaultHelperText=\"Demo Email: admin@healthm.com\"\n        formikBag={formikBag}\n      />\n\n      <FormikTextField\n        name={userSchema.PASSWORD}\n        label=\"Password\"\n        type=\"password\"\n        defaultHelperText=\"Demo Password: admin\"\n        formikBag={formikBag}\n      />\n\n      <ProgressButton\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        isWorking={isSubmitting}\n        className={classes.submitButton}\n      >\n        Login\n      </ProgressButton>\n    </form>\n  );\n}\n\n\n","export default __webpack_public_path__ + \"static/media/logo.727f7a81.svg\";","import logoSvg from '../../assets/logo.svg'\nexport default function Logo(props){\n    return (<img src={logoSvg}  alt=\"Health-M Logo\" {...props} />); \n}","export const SET_LANGUAGE = \"SET_LANGUAGE\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const SET_LOGGED_IN = \"SET_LOGGED_IN\";\n","import { SET_LANGUAGE, SET_MESSAGE, SET_LOGGED_IN } from \"./actionTypes\";\n\nexport const setLanguage = (language) => ({\n  type: SET_LANGUAGE,\n  payload: { language },\n});\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: { message },\n});\n\nexport const setLoggedIn = (loggedIn) =>({\n  type: SET_LOGGED_IN,\n  payload: { loggedIn },\n});\n","import { Paper, Box,Slide, Typography } from \"@material-ui/core\";\nimport LoginForm from \"../../components/LoginForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Logo from \"../../components/icons/Logo\";\nimport {Redirect} from \"react-router-dom\";\nimport {SEARCH_PATH} from \"../../App/routePaths\";\nimport { setLoggedIn } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: theme.spacing(1),\n    width: \"500px\",\n  },\n}));\n\nfunction LoginPage(props) {\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100vh\"\n      width=\"100vw\"\n    >\n      {props.loggedIn && <Redirect to={SEARCH_PATH} />}\n      <Slide direction=\"down\" in={true} timeout={1500}>\n      <Paper className={classes.formContainer}>\n        <Typography variant=\"h2\">Health-M</Typography>\n        <Logo height=\"128px\" width=\"128px\" />\n        <LoginForm setLoggedIn={props.setLoggedIn}/>\n      </Paper>\n      </Slide>\n    </Box>\n  );\n}\n\nexport default connect((state) => ({ loggedIn: state.loggedIn }), {\n  setLoggedIn,\n})(LoginPage);\n\n\n\n\n","import {makeStyles} from '@material-ui/core/styles'\nimport {Divider} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    divider:{\n        margin: theme.spacing(2,0)\n      }\n\n}\n));\nfunction HMDivider(){\n    const classes = useStyles();\n    return <Divider classes={{root:classes.divider}} light={true}/>\n\n}\n\n\nexport default HMDivider;","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport SimpleDivider from \"../SimpleDivider\";\n\nexport default function FormSection(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h5\" gutterBottom>\n        {props.title}\n      </Typography>\n      {props.children}\n      <SimpleDivider />\n    </React.Fragment>\n  );\n}\n","export const FULL_NAME = \"fullName\";\nexport const GENDER = \"gender\";\nexport const EMAIL = \"email\";\nexport const BODY_WEIGHT = \"bodyWeight\";\nexport const BIRTH_DATE = \"birthDate\";\nexport const ADDRESS = \"address\";\nexport const PHONE_NUMBER = \"phoneNumber\";\nexport const PEDIGREE_CHART = \"pedigreeChart\";\nexport const ADMITTOR_NAME = \"admittorName\";\nexport const ADMISSION_DATE = \"admissionDate\";\nexport const PARENTS_SEPARATED = \"parentsSeparated\";\nexport const PARENTS_SEPARATED_DESCRIPTION = \"parentsSeparatedDescription\";\nexport const PARENTS_DIVORCED = \"parentsDivorced\";\nexport const PARENTS_DIVORCED_DESCRIPTION = \"parentsDivorcedDescription\";\nexport const PARENTS_DIED = \"parentsDied\";\nexport const PARENTS_DIED_DESCRIPTION = \"parentsDiedDescription\";\nexport const STEP_FAMILY = \"stepFamily\";\nexport const STEP_FAMILY_DESCRIPTION = \"stepFamilyDescription\";\nexport const DOCTOR_NOTES = \"doctorNotes\";\nexport const DIAGNOSIS_TREATMENT = \"diagnosisTreatment\";","import {\n  FormControl,\n  FormLabel,\n  RadioGroup as MaterialRadioGroup,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nexport default function RadioGroup(props) {\n  return (\n    <FormControl margin=\"normal\" fullWidth={true} component=\"fieldset\">\n      <FormLabel component=\"legend\">{props.label}</FormLabel>\n      <MaterialRadioGroup\n        aria-label=\"gender\"\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        row={true}\n      >\n        {props.radios.map((radio) => (\n          <FormControlLabel\n            key={radio.value}\n            value={radio.value}\n            control={<Radio />}\n            label={radio.label}\n          />\n        ))}\n\n      </MaterialRadioGroup>\n\n      \n    </FormControl>\n  );\n}\n","import RadioGroup from \"./RadioGroup\";\n\n//formikBag must contain\n// {values, onBlur, onChange}\nexport default function FormikRadioGroup(props) {\n  const { name, formikBag, ...otherProps } = props;\n  const { values, onBlur, onChange } = formikBag;\n  return (\n    <RadioGroup\n      name={name}\n      value={values[name]}\n      onChange={onChange}\n      onBlur={onBlur}\n      {...otherProps}\n    />\n  );\n}\n","import { \n    KeyboardDatePicker} from '@material-ui/pickers'\n\nexport default function HMDatePicker(props){\n    return (<KeyboardDatePicker\n    disableToolbar\n    variant=\"inline\"\n    format=\"MM/dd/yyyy\"\n    margin=\"normal\"\n    KeyboardButtonProps={{\n      'aria-label': 'change date',\n    }}\n    {...props}\n  />);\n}","import DatePicker from \"./DatePicker\";\n\n//formikBag must contain\n// {values,onBlur, setFieldValue}\nexport default function FormikDatePicker(props) {\n  const { name, formikBag, ...otherProps } = props;\n  const {values,onBlur, setFieldValue } = formikBag;\n\n  return (\n    <DatePicker\n      name={name}\n      value={values[name]}\n      onChange={(date) => setFieldValue(name, date)}\n      onBlur={onBlur}\n      {...otherProps}\n    />\n  );\n}\n","import MaskedInput from 'react-text-mask';\nimport TextField from './TextField';\nimport React from 'react'\n\n\n\nexport default function PhoneField(props){\n    return (\n      <TextField {...props}\n      InputProps={{\n        inputComponent: TextMaskCustom\n      }}\n      InputLabelProps={{\n        shrink: true,\n      }}/>\n      \n    );\n\n}\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    React.useImperativeHandle(inputRef, () => ({\n      focus: () => {\n        inputRef.current.focus();\n      },\n    }));\n\n    return (\n      <MaskedInput\n        {...other}\n        mask={['(', '0', /\\d/, /\\d/,/\\d/, ')', '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholderChar={' '}\n        showMask\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n      />\n    );\n  }\n\n","import PhoneField from \"./PhoneField\";\n// formikBag must contain\n// {values,errors,onChange,onBlur}\nexport default function FormikPhoneField(props) {\n  const { name, formikBag, ...otherProps } = props;\n  const { values, errors, onChange, onBlur } = formikBag;\n  return (\n    <PhoneField\n      name={name}\n      value={values[name]}\n      error={Boolean(errors[name])}\n      helperText={errors[name]}\n      onChange={onChange}\n      onBlur={onBlur}\n      {...otherProps}\n    />\n  );\n}\n","import {\n  FormControlLabel,\n  Checkbox as MaterialCheckbox,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  checkBoxRoot: {\n    display: \"flex\",\n  },\n}));\n\nexport default function Checkbox(props) {\n  const { label, disabled, ...checkBoxProps } = props;\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      control={<MaterialCheckbox {...checkBoxProps} />}\n      label={label}\n      classes={{ root: classes.checkBoxRoot }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport TextField from \"./TextField\";\n\nexport default function CheckboxedText(props) {\n  return (\n    <React.Fragment>\n      <Checkbox\n        name={props.checkboxName}\n        checked={props.isChecked}\n        onChange={props.onCheckboxChange}\n        label={props.checkboxLabel}\n      />\n        \n        {props.isChecked && (\n        <TextField\n          value={props.textFieldValue}\n          label={props.checkboxLabel + \" Description\"}\n          onChange={props.onTextFieldChange}\n          onBlur={props.onBlur}\n          name={props.textFieldName}\n          error={Boolean(props.textFieldError)}\n          helperText={props.textFieldError}\n          multiline\n          rows={4}\n        />\n      )}\n    \n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport CheckboxedTextField from \"./CheckboxedTextField\";\n\n//formikBag must contain\n// { values, errors, onChange, onBlur, setFieldValue }\nexport default function FormikCheckboxedText(props) {\n  const { checkboxName, textFieldName, formikBag, ...otherProps } = props;\n  const { values, errors, onChange, onBlur, setFieldValue } = formikBag;\n  return (\n    <CheckboxedTextField\n      checkboxName={checkboxName}\n      textFieldName={textFieldName}\n      isChecked={values[checkboxName]}\n      textFieldValue={values[textFieldName]}\n      onCheckboxChange={(e) => {\n        setFieldValue(checkboxName, e.target.checked);\n        setFieldValue(textFieldName, \"\");\n      }}\n      onTextFieldChange={onChange}\n      onBlur={onBlur}\n      textFieldError={errors[textFieldName]}\n      {...otherProps}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport HMRadioGroup from \"../inputs/RadioGroup\";\nimport HMTextField from \"../inputs/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Formik} from 'formik'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nexport default function FamilyNodeDialog(props) {\n\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={props.onClose}\n      onEnter={()=> {\n        setName('');\n        setGender(\"male\")\n      }}\n    >\n      <DialogTitle id=\"form-dialog-title\">Add Family Member</DialogTitle>\n\n      <DialogContent>\n      <DialogContentText>\n            Please fill the following information to add a new family member.\n      </DialogContentText>\n        <HMRadioGroup\n          label=\"Gender\"\n          name=\"gender\"\n          value={gender}\n          name=\"patientGenderDialog\"\n          onChange={(e) => setGender(e.target.value)}\n          radios={[\n            { value: \"male\", label: \"Male\" },\n            { value: \"female\", label: \"Female\" },\n          ]}\n        />\n\n        <HMTextField\n          name=\"patientName\"\n          label=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={props.onClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button\n          onClick={(e) => {\n            props.onConfirm(name, gender);\n            props.onClose();\n          }}\n          color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/delete.c15b57c8.svg\";","export default __webpack_public_path__ + \"static/media/family.3695c0f7.svg\";","import { fabric } from \"fabric/dist/fabric\";\nimport removeIconSrc from \"../../assets/delete.svg\";\nimport addIconSrc from \"../../assets/family.svg\";\n\nexport default class PedigreeChartCanvas extends fabric.Canvas {\n  static COMMON_FAMILY_NODE_CONFIG = { originX: \"center\", originY: \"center\" };\n  static FAMILY_NODE_PADDING = 16;\n  static FONT_SIZE = 50;\n  static FONT_FAMILY = \"Roboto, sans-serif\";\n  static DIMENSIONS = { width: 1024, height: 576 };\n  static BACKGROUND_COLOR = \"#e0e0e0\";\n  static CONNECTION_LINE_COLOR = \"#282C34\";\n\n  constructor(canvasId,onRemoveControlClick, onAddControlClick) {\n    super(canvasId);\n    this.setBackgroundColor(PedigreeChartCanvas.BACKGROUND_COLOR);\n    this.setDimensions(PedigreeChartCanvas.DIMENSIONS);\n    this._createCustomControls(onRemoveControlClick, onAddControlClick);\n    this.on(\"object:moving\", this._trackFamilyMemberNodes);\n    this.on(\"object:scaling\",this._trackFamilyMemberNodes);\n  }\n\n  _createCustomControls(onRemoveControlClick, onAddControlClick) {\n    const removeIcon = makeImageElement(removeIconSrc);\n\n    const addIcon = makeImageElement(addIconSrc);\n\n    // -0.5 for x and y, means the top left corner.\n    fabric.Object.prototype.controls.removeControl = new fabric.Control({\n      x: -0.5,\n      y: -0.5,\n      offsetY: -24,\n      offsetX: -24,\n      cursorStyle: \"pointer\",\n      render: this._renderControl(removeIcon),\n      mouseUpHandler: onRemoveControlClick,\n      cornerSize: 40,\n    });\n\n    fabric.Object.prototype.controls.addControl = new fabric.Control({\n      x: 0.5,\n      y: -0.5,\n      offsetY: -24,\n      offsetX: 24,\n      cursorStyle: \"pointer\",\n      render: this._renderControl(addIcon),\n      mouseUpHandler: onAddControlClick,\n      cornerSize: 40,\n    });\n  }\n\n  _renderControl(icon) {\n    return function renderControl(ctx, left, top, styleOverride, fabricObject) {\n      let size = this.cornerSize;\n      ctx.save();\n      ctx.translate(left, top);\n      ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\n      // Images are drawn from top left corner as the center\n      // So we use -size/2 to center them\n      ctx.drawImage(icon, -size / 2, -size / 2, size, size);\n      ctx.restore();\n    };\n  }\n\n  addFamilyMemberNode(name, gender, relatedFamilyMemberNode) {\n    const familyMemberNode = this._makeFamilyMemberNode(name, gender);\n\n    if (typeof relatedFamilyMemberNode !== \"undefined\") {\n      const connectionLine = this._connectFamilyMemberNodes(\n        relatedFamilyMemberNode,\n        familyMemberNode  \n      );\n      this.add(connectionLine);\n      this.sendToBack(connectionLine);\n    }\n\n    this.add(familyMemberNode);\n  }\n\n  removeFamilyMemberNode(target) {\n\n    // Nodes that shouldn't be removed\n    if (this._isLoneNode(target)) {\n      throw new Error(\"You can't remove lone nodes!\");\n    }\n    if (this._isIntermediateNode(target)) {\n      throw new Error(\"You can't remove intermediate nodes!\");\n    }\n    //-----\n\n    //Remove the line that terminate at this target\n    if (this._hasTerminalConnectionLine(target)) {\n      this._removeTerminalConnectionLine(target);\n    }\n\n    if (this._hasOriginConnectionLines(target)){\n      this._removeOriginConnectionLines(target);\n    }\n\n    this.remove(target);\n\n    this.requestRenderAll();\n  }\n\n  _makeFamilyMemberNode(name, gender) {\n    if (this._hasObjectWithId(name)) {\n      throw new Error(\"A node with this name already exists!\");\n    }\n\n    const label = new fabric.Text(name, {\n      ...PedigreeChartCanvas.COMMON_FAMILY_NODE_CONFIG,\n      fontSize: PedigreeChartCanvas.FONT_SIZE,\n      fontFamily: PedigreeChartCanvas.FONT_FAMILY,\n    });\n\n    const shape = this._makeFamilyMemberNodeShape(label, gender);\n\n    const familyMemberNode = new fabric.Group([shape, label], {\n      ...PedigreeChartCanvas.COMMON_FAMILY_NODE_CONFIG,\n      left: 150,\n      top: 100,\n      cornerSize: 25,\n      id: name,\n    });\n\n    familyMemberNode.originConnectionLines = [];\n    familyMemberNode.terminalConnectionLine = null;\n\n    return familyMemberNode;\n  }\n\n  _makeFamilyMemberNodeShape(label, gender) {\n    let shape;\n    if (gender === \"male\") {\n      shape = new fabric.Rect({\n        ...PedigreeChartCanvas.COMMON_FAMILY_NODE_CONFIG,\n        fill: \"#7986cb\",\n        height: label.height + PedigreeChartCanvas.FAMILY_NODE_PADDING,\n        width: label.width + PedigreeChartCanvas.FAMILY_NODE_PADDING,\n        rx: 12,\n        ry: 12,\n      });\n    } else {\n      shape = new fabric.Circle({\n        ...PedigreeChartCanvas.COMMON_FAMILY_NODE_CONFIG,\n        fill: \"#f06292\",\n        radius: label.width / 2 + PedigreeChartCanvas.FAMILY_NODE_PADDING,\n      });\n    }\n    return shape;\n  }\n\n  _hasOriginConnectionLines(familyNode) {\n    return familyNode.originConnectionLines && familyNode.originConnectionLines.length > 0;\n  }\n\n  _hasTerminalConnectionLine(familyNode) {\n    return Boolean(familyNode.terminalConnectionLine);\n  }\n\n  _isIntermediateNode(familyNode) {\n    return this._connectionLineCount(familyNode) > 1; \n  }\n\n  _isLoneNode(familyNode) {\n    return this._connectionLineCount(familyNode)  === 0 ;\n  }\n\n  _trackFamilyMemberNodes(moveEvent) {\n\n    const movingFamilyNode = moveEvent.target;\n\n    \n\n    if (this._hasOriginConnectionLines(movingFamilyNode)) {\n      const originLines = movingFamilyNode.originConnectionLines;\n      originLines.forEach((line) =>{\n        line.set({ x1: movingFamilyNode.left, y1: movingFamilyNode.top })\n      });\n    }\n\n    if (this._hasTerminalConnectionLine(movingFamilyNode)) {\n      const terminalLine = movingFamilyNode.terminalConnectionLine;\n      terminalLine.set({ x2: movingFamilyNode.left, y2: movingFamilyNode.top });\n    }\n\n    this.renderAll();\n  }\n\n  _connectFamilyMemberNodes(fromNode, toNode) {\n    const line = this._makeConnectionLine(\n      [fromNode.left, fromNode.top, toNode.left, toNode.top],\n      fromNode.id,\n      toNode.id\n    );\n\n    // The connection lines that originate from this node\n    // a Family node can have more than one origin connection line\n    fromNode.originConnectionLines = fromNode.originConnectionLines  || [];\n    fromNode.originConnectionLines.push(line);\n    \n    // The connection line which terminates at this node\n    //The toFamilyNode is drawn at the end (x2,y2) coords of this line.\n    toNode.terminalConnectionLine = line;\n\n    return line;\n  }\n\n  _hasObjectWithId(id) {\n    return this.getObjects().filter((obj) => obj.id === id).length > 0;\n  }\n\n  _findFamilyMemberNodeById(id) {\n    return this.getObjects().filter((obj) => obj.id === id)[0];\n  }\n\n  _makeConnectionLine(coords, fromNodeId, toNodeId) {\n    return new fabric.Line(coords, {\n      fill: PedigreeChartCanvas.CONNECTION_LINE_COLOR,\n      stroke:PedigreeChartCanvas.CONNECTION_LINE_COLOR,\n      strokeWidth: 5,\n      selectable: false,\n      evented: false,\n      fromNodeId,\n      toNodeId,\n    });\n  }\n\n  _connectionLineCount(familyNode){\n    const terminalConnectionLinesCount = this._hasTerminalConnectionLine(familyNode) ? 1 : 0;\n    const originConnectionLinesCount = familyNode.originConnectionLines.length;\n    return terminalConnectionLinesCount + originConnectionLinesCount;\n  }\n\n  _removeTerminalConnectionLine(familyNode){\n    const terminalConnectionLine = familyNode.terminalConnectionLine;\n\n\n    // We must also inform the node that the line originated from of it its removal.\n    const originNode = this._findFamilyMemberNodeById(\n      terminalConnectionLine.fromNodeId\n    );\n    \n    // This is done by removing it from that nodes originConnectionLines list.\n    originNode.originConnectionLines = originNode.originConnectionLines.filter(\n      (connectionLine) => connectionLine.toNodeId !== familyNode.id\n    );\n\n    this.remove(terminalConnectionLine);\n\n  }\n\n  _removeOriginConnectionLines(familyNode){\n    const originLines= familyNode.originConnectionLines;\n    originLines.forEach((originLine)=>{\n\n      // Inform node the line terminates at of its removal\n      const toNode = this._findFamilyMemberNodeById(originLine.toNodeId);\n      // This is done by setting the terminalLine of that node to null\n      toNode.terminalConnectionLine = null;\n\n      this.remove(originLine);\n    })  \n  }\n\n  toJSON(){\n   return super.toJSON(['cornerSize','selectable','evented','id','toNodeId','fromNodeId'])\n  }\n\n  loadFromJSON(json){\n    super.loadFromJSON(json);\n    const lines = this.getObjects('line');\n    lines.forEach((line)=>{\n      const fromNode = this._findFamilyMemberNodeById(line.fromNodeId);\n      fromNode.originConnectionLines = fromNode.originConnectionLines || [];\n      fromNode.originConnectionLines.push(line);\n\n      const toNode = this._findFamilyMemberNodeById(line.toNodeId);\n      toNode.terminalConnectionLine = line;\n\n      // Lines have awkward coords in fabric when deserialized...\n      // For now, work around this by setting the lines coords manually after load.\n      line.set({ x1: fromNode.left, y1: fromNode.top });\n      line.set({ x2: toNode.left, y2: toNode.top });\n       \n    });\n\n  }\n  \n}\n\n\nexport function makeImageElement(src) {\n  const imgElement = document.createElement(\"img\");\n  imgElement.src = src;\n  return imgElement;\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Snackbar, Fab } from \"@material-ui/core\";\nimport { SaveOutlined } from \"@material-ui/icons\";\nimport FamilyNodeDialog from \"./FamilyNodeDialog\";\nimport PedigreeChartCanvas from \"./pedigreeChart\";\n\n\nexport default function PedigreeChart(props) {\n\n  const [isFamilyDialogOpen, setFamilyDialogOpen] = useState(false);\n  const [isSnackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n\n  let canvasRef = useRef();\n  //Holds a reference to the family node that opened the dialog\n  let dialogOriginRef = useRef();\n\n  useEffect(() => {\n\n    const canvas = new PedigreeChartCanvas(\n      \"fabric-canvas\",\n      handleRemoveControlClick,\n      handleAddControlClick\n    );\n    canvasRef.current = canvas;\n\n    if (props.chartData){\n      canvas.loadFromJSON(props.chartData);\n    }\n    else{\n      canvas.addFamilyMemberNode(\"Eve\", \"female\");\n    }\n   \n\n\n    return ()=>{\n      props.saveChart(JSON.stringify(canvas));\n      }\n  }, []);\n\n  function handleRemoveControlClick(eventData, target) {\n    try {\n      canvasRef.current.removeFamilyMemberNode(target);\n    } catch (e) {\n      openSnackbar(e.message);\n      console.log(e);\n    }\n  }\n\n  function handleAddControlClick(eventData, target) {\n    dialogOriginRef.current = target;\n    setFamilyDialogOpen(true);\n  }\n\n  function openSnackbar(msg) {\n    setSnackbarMessage(msg);\n    setSnackbarOpen(true);\n  }\n\n  function closeSnackbar(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  }\n\n  function createFamilyMemberNodeViaDialog(name, gender) {\n    const canvas = canvasRef.current;\n    const originNode = dialogOriginRef.current;\n    try {\n      canvas.addFamilyMemberNode(name, gender, originNode);\n    } catch (e) {\n      openSnackbar(e.message);\n      console.log(e);\n    }\n  }\n\n  return (\n    <Box width=\"100%\" paddingTop={2} display=\"flex\" justifyContent=\"center\">\n\n      <canvas id=\"fabric-canvas\" />\n      \n\n      <FamilyNodeDialog\n        isOpen={isFamilyDialogOpen}\n        onClose={() => setFamilyDialogOpen(false)}\n        onConfirm={createFamilyMemberNodeViaDialog}\n      ></FamilyNodeDialog>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={isSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={closeSnackbar}\n        message={snackbarMessage}\n      />\n    </Box>\n  );\n}\n","import FormSection from \"../../layout/Section\";\nimport PedigreeChart from \"../../PedigreeChart\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Dialog, Button, Slide } from \"@material-ui/core\";\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { PEDIGREE_CHART } from \"../inputNames\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default function PedigreeChartSection(props) {\n  const { values, setFieldValue } = props.formikBag;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <FormSection title=\"Pedigree Chart\">\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open Pedigree Chart Editor\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Slide}\n      >\n        <PedigreeChartAppBar onClose={handleClose} classes={classes} />\n        <PedigreeChart\n          chartData={values[PEDIGREE_CHART]}\n          saveChart={(value) => setFieldValue(PEDIGREE_CHART, value)}\n        />\n      </Dialog>\n    </FormSection>\n  );\n}\n\nfunction PedigreeChartAppBar({ onClose: handleClose, classes }) {\n  return (\n    <React.Fragment>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Pedigree Chart Editor\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.toolbar}></div>\n    </React.Fragment>\n  );\n}\n","import {FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme)=>({\n    formControl: {\n        margin: theme.spacing(2,0),\n        maxWidth: 150,\n        display: 'flex'\n      }\n    \n}));\n\n\nexport default function HMSelect(props) {\n    const classes = useStyles();\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel>{props.label}</InputLabel>\n      <Select\n        name={props.name}\n        value={props.value}\n        onChange={props.onChange}\n        label={props.label}\n      >\n        {props.items.map((item) => (\n          <MenuItem key={item.key} value={item.value}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","export const NULL_MEDICAL_CODE = 'None';\nexport const MEDICAL_CODES = ['F1','F13','F22','F37','F56','F88','F99'];\n","import React from \"react\";\nimport FormSection from \"../../layout/Section\";\nimport HMSelect from \"../../inputs/Select\";\nimport HMTextField from \"../../inputs/TextField\";\nimport { Button, Paper, Typography } from \"@material-ui/core\";\nimport { AddCircle } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NULL_MEDICAL_CODE, MEDICAL_CODES } from \"../medicalCodes\";\nimport {DIAGNOSIS_TREATMENT} from \"../inputNames\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    backgroundColor: theme.palette.grey[100],\n  },\n}));\n\nconst dataset = [NULL_MEDICAL_CODE, ...MEDICAL_CODES].map((code) => ({\n  key: code,\n  value: code,\n  label: code,\n}));\n\nexport default function DiagnosisTreatmentSection({ formikBag }) {\n  const { values, errors, onChange, onBlur, setFieldValue } = formikBag;\n  const classes = useStyles();\n\n  return (\n    <FormSection title=\"Diagnosis & Treatment\">\n      {values[DIAGNOSIS_TREATMENT].map((medicalCode, index) => {\n\n        const itemKey = `${DIAGNOSIS_TREATMENT}[${index}]`;\n        const treatmentError = getTreatmentError(errors, index)\n        return (\n          // It's not recommended to depend on index when generating keys\n          // However, it's going to be used here because performance is not currently an issue.\n          <Paper\n            variant=\"outlined\"\n            className={classes.paper}\n            key={itemKey}\n          >\n            <Typography variant=\"h6\">{\"Diagnosis \" + (index + 1)}</Typography>\n            <HMSelect\n              label=\"Diagnosis\"\n              items={dataset}\n              onChange={onChange}\n              name={`${itemKey}.diagnosis`}\n              value={values.diagnosisTreatment[index].diagnosis}\n            />\n            <HMTextField\n              label=\"Treatment\"\n              name={`${itemKey}.treatment`}\n              value={values.diagnosisTreatment[index].treatment}\n              onChange={onChange}\n              onBlur={onBlur}\n              error={Boolean(treatmentError)}\n              helperText={treatmentError}\n              disabled={!Boolean(values.diagnosisTreatment[index].diagnosis)}\n            />\n          </Paper>\n        );\n      })}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          setFieldValue(\"diagnosisTreatment\", [\n            ...values.diagnosisTreatment,\n            { diagnosis: \"\", treatment: \"\" },\n          ]);\n        }}\n      >\n        Add Diagnosis &nbsp;\n        <AddCircle />\n      </Button>\n    </FormSection>\n  );\n}\n\nconst getTreatmentError = (errors, index) => {\n  if (errors.diagnosisTreatment && errors.diagnosisTreatment[index]) {\n    return errors.diagnosisTreatment[index].treatment;\n  }\n  return \"\";\n};\n","import PatientNameSection from \"./PatientNameSection\";\nimport PatientBodySection from \"./PatientBodySection\";\nimport PatientContactInfoSection from \"./PatientContactInfoSection\";\nimport PatientAdmissionSection from \"./PatientAdmissionSection\";\nimport FamilySection from \"./FamilySection\";\nimport PedigreeChartSection from \"./PedigreeChartSection\";\nimport DiagnosisTreatmentSection from \"./DiagnosisTreatmentSection\";\nimport DoctorNotesSection from \"./DoctorNotesSection\";\n\nconst sections = [\n  PatientNameSection,\n  PatientBodySection,\n  PatientContactInfoSection,\n  PatientAdmissionSection,\n  FamilySection,\n  PedigreeChartSection,\n  DiagnosisTreatmentSection,\n  DoctorNotesSection,\n];\n\nexport default sections;","import FormikTextField from \"../../inputs/FormikTextField\";\nimport Section from \"../../layout/Section\";\nimport { FULL_NAME } from \"../inputNames\";\n\nexport default function PatientNameSection({ formikBag }) {\n  return (\n    <Section title=\"Patient Name\">\n      <FormikTextField\n        name={FULL_NAME}\n        label=\"Full Name\"\n        formikBag={formikBag}\n      />\n    </Section>\n  );\n}\n","import FormikTextField from \"../../inputs/FormikTextField\";\nimport Section from \"../../layout/Section\";\nimport FormikRadioGroup from \"../../inputs/FormikRadioGroup\";\nimport FormikDatePicker from \"../../inputs/FormikDatePicker\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport { GENDER, BODY_WEIGHT, BIRTH_DATE } from \"../inputNames\";\n\nexport default function PatientBodySection({ formikBag }) {\n  return (\n    <Section title=\"Patient Body Info.\">\n      <FormikRadioGroup\n        name={GENDER}\n        label=\"Gender\"\n        formikBag={formikBag}\n        radios={[\n          { value: \"male\", label: \"Male\" },\n          { value: \"female\", label: \"Female\" },\n        ]}\n      />\n\n      <FormikTextField\n        name={BODY_WEIGHT}\n        label=\"Body Weight\"\n        formikBag={formikBag}\n        type=\"number\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n\n      <FormikDatePicker\n        name={BIRTH_DATE}\n        label=\"Birth Date\"\n        formikBag={formikBag}\n        maxDate={new Date(new Date().getFullYear() - 1, new Date().getMonth())}\n      />\n    </Section>\n  );\n}\n","import FormikTextField from \"../../inputs/FormikTextField\";\nimport FormSection from \"../../layout/Section\";\nimport FormikPhoneField from \"../../inputs/FormikPhoneField\";\nimport { ADDRESS, EMAIL, PHONE_NUMBER } from \"../inputNames\";\n\nexport default function PatientContactInfoSection({ formikBag }) {\n  return (\n    <FormSection title=\"Contact Info.\">\n      <FormikTextField name={ADDRESS} label=\"Address\" formikBag={formikBag} />\n\n      <FormikTextField name={EMAIL} label=\"Email\" formikBag={formikBag} />\n\n      <FormikPhoneField\n        name={PHONE_NUMBER}\n        label=\"Phone Number\"\n        formikBag={formikBag}\n      />\n    </FormSection>\n  );\n}\n","import FormikTextField from \"../../inputs/FormikTextField\";\nimport FormSection from \"../../layout/Section\";\nimport FormikDatePicker from \"../../inputs/FormikDatePicker\";\nimport { ADMISSION_DATE, ADMITTOR_NAME } from \"../inputNames\";\n\nexport default function PatientAdmissionSection({ formikBag }) {\n  return (\n    <FormSection title=\"Admission Info.\">\n      <FormikDatePicker\n        name={ADMISSION_DATE}\n        label=\"Admission Date\"\n        formikBag={formikBag}\n        maxDate={new Date()}\n      />\n\n      <FormikTextField\n        name={ADMITTOR_NAME}\n        label=\"Patient admitted by\"\n        formikBag={formikBag}\n      />\n    </FormSection>\n  );\n}\n","import FormSection from \"../../layout/Section\";\nimport FormikCheckboxedTextField from \"../../inputs/FormikCheckboxedTextField\";\nimport {\n  PARENTS_SEPARATED,\n  PARENTS_SEPARATED_DESCRIPTION,\n  PARENTS_DIVORCED,\n  PARENTS_DIVORCED_DESCRIPTION,\n  PARENTS_DIED,\n  PARENTS_DIED_DESCRIPTION,\n  STEP_FAMILY,\n  STEP_FAMILY_DESCRIPTION,\n} from \"../inputNames\";\n\nexport default function FamilySection({ formikBag }) {\n  return (\n    <FormSection title=\"Family Info.\">\n      <FormikCheckboxedTextField\n        checkboxLabel=\"Parents Separation\"\n        checkboxName={PARENTS_SEPARATED}\n        textFieldName={PARENTS_SEPARATED_DESCRIPTION}\n        formikBag={formikBag}\n      />\n\n      <FormikCheckboxedTextField\n        checkboxLabel=\"Parents Divorce\"\n        checkboxName={PARENTS_DIVORCED}\n        textFieldName={PARENTS_DIVORCED_DESCRIPTION}\n        formikBag={formikBag}\n      />\n\n      <FormikCheckboxedTextField\n        checkboxLabel=\"Parents Died\"\n        checkboxName={PARENTS_DIED}\n        textFieldName={PARENTS_DIED_DESCRIPTION}\n        formikBag={formikBag}\n      />\n\n      <FormikCheckboxedTextField\n        checkboxLabel=\"Step Family\"\n        checkboxName={STEP_FAMILY}\n        textFieldName={STEP_FAMILY_DESCRIPTION}\n        formikBag={formikBag}\n      />\n    </FormSection>\n  );\n}\n","import FormSection from \"../../layout/Section\";\nimport FormikTextField from \"../../inputs/FormikTextField\";\nimport { DOCTOR_NOTES } from \"../inputNames\";\n\nexport default function DoctorNotesSection({ formikBag }) {\n  return (\n    <FormSection title=\"Doctor's Notes\">\n      <FormikTextField\n        label=\"Mental State Examination\"\n        name={DOCTOR_NOTES}\n        formikBag={formikBag}\n        multiline\n        rows={6}\n      />\n    </FormSection>\n  );\n}\n","import * as yup from \"yup\";\n\nconst diagnosisTreatmentSchema = yup\n  .object()\n  .shape({ diagnosis: yup.string(), treatment: yup.string().max(300) });\n\n// Only perform validation that aids user experience.\n// E.g validating a Checkbox seems redundant since it always have a value of true/false\nconst validationSchema = yup.object().shape({\n  fullName: yup\n    .string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: yup.string().email(\"Invalid Email\").required(\"Required\"),\n  bodyWeight: yup.string().max(3, \"Too Long!\").required(\"Required\"),\n  address: yup.string().max(100, \"Too long!\").required(\"Required\"),\n  phoneNumber: yup\n    .string()\n    .transform((val) => val.replace(/[^\\d]/g, \"\"))\n    .length(11, \"Please enter 11 digits\")\n    .required(\"Required\"),\n  admittorName: yup\n    .string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too long!\")\n    .required(\"Required\"),\n  parentsSeparatedDescription: yup.string().min(2, \"Too Short!\").max(500, \"Too long!\").optional(),\n  parentsDivorcedDescription: yup.string().max(500, \"Too long!\").optional(),\n  parentsDiedDescription: yup.string().max(500, \"Too long!\").optional(),\n  stepFamilyDescription: yup.string().max(500, \"Too long!\").optional(),\n  diagnosisTreatment: yup.array().of(diagnosisTreatmentSchema),\n  doctorNotes: yup.string().max(10000, \"Too long!\").required(\"Required\"),\n});\n\nexport default validationSchema;\n","import React,{Fragment} from \"react\";\nimport { Formik } from \"formik\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { getElementWithError, getTouchedErrors } from \"../../utils/formikUtils\";\nimport sections from \"./sections\";\nimport validationSchema from \"./validationSchema\";\nimport ProgressButton from \"../inputs/ProgressButton\";\n\nexport default function PatientFormContainer(props) {\n  const {\n    initialValues,\n    onSubmit\n  } = props;\n\n  return (\n    <Fragment>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {renderPatientForm}\n      </Formik>\n    </Fragment>\n  );\n}\n\nfunction renderPatientForm({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  setFieldValue,\n  isValid,\n}) {\n  const formikBag = {\n    values,\n    errors: getTouchedErrors(touched, errors),\n    onChange: handleChange,\n    onBlur: handleBlur,\n    setFieldValue,\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {/* Shouldn't use inline CSS / not Scalable etc. */}\n      <form\n      style={{width:\"100%\"}}\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!isValid) {\n            return getElementWithError(errors).focus();\n          }\n          handleSubmit();\n        }}\n      >\n        {sections.map((Section) => (\n          <Section key={Section.name} formikBag={formikBag} />\n        ))}\n        <ProgressButton\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          isWorking={isSubmitting}\n        >\n          Submit\n        </ProgressButton>\n      </form>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import * as names from \"./inputNames\";\n\nexport default function getInitialValues() {\n  const todaysDate = new Date();\n  const lastYearsDate = new Date(\n    todaysDate.getFullYear() - 1,\n    todaysDate.getMonth()\n  );\n\n  // These keys must be the same as the names of inputs in the form to work with Formik\n  return {\n    [names.FULL_NAME]: \"\",\n    [names.GENDER]: \"male\",\n    [names.EMAIL]: \"\",\n    [names.BODY_WEIGHT]: \"\",\n    [names.BIRTH_DATE]: lastYearsDate,\n    [names.ADDRESS]: \"\",\n    [names.PHONE_NUMBER]: \"\",\n    [names.PEDIGREE_CHART]: \"\",\n    [names.ADMITTOR_NAME]: \"\",\n    [names.ADMISSION_DATE]: todaysDate,\n    [names.PARENTS_SEPARATED]: false,\n    [names.PARENTS_SEPARATED_DESCRIPTION]: \"\",\n    [names.PARENTS_DIVORCED]: false,\n    [names.PARENTS_DIVORCED_DESCRIPTION]: \"\",\n    [names.PARENTS_DIED]: false,\n    [names.PARENTS_DIED_DESCRIPTION]: \"\",\n    [names.STEP_FAMILY]: false,\n    [names.STEP_FAMILY_DESCRIPTION]: \"\",\n    [names.DOCTOR_NOTES]: \"\",\n    [names.DIAGNOSIS_TREATMENT]: [{ diagnosis: \"\", treatment: \"\" }],\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, Divider, Typography } from \"@material-ui/core\";\nimport Logo from \"../icons/Logo\";\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: '240px',\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: '240px',\n  },\n  // necessary for content to be below app bar\n  logoBar: {\n    ...theme.mixins.toolbar,\n    maxHeight: \"64px\",\n    display:\"flex\",\n    padding: theme.spacing(1, 2),\n    alignItems:'center',\n  },\n  logo:{\n    height:'100%',\n    marginRight:theme.spacing(2)\n  },\n  activeLink: {\n    color: theme.palette.secondary.main\n  },\n  listItemRoot: {\n    color: 'inherit'\n  }\n}));\n\n\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n      {...props}\n    >\n      <div className={classes.logoBar} >\n        <Logo className={classes.logo} />\n        <Typography variant=\"h6\">Health-M</Typography>\n      </div>\n      <Divider />\n      {props.children}\n    </Drawer>\n  );\n}","import { List as MaterialList } from \"@material-ui/core\";\n\nfunction List(props) {\n  const { children, ...otherProps } = props;\n  return <MaterialList {...otherProps}>{children}</MaterialList>;\n}\n\nexport default List;","import {\n  ListItem as MaterialListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\n\nfunction ListItem(props) {\n  const { icon, text, ...otherProps } = props;\n  return (\n    <MaterialListItem {...otherProps}>\n      {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n      <ListItemText primary={text} />\n    </MaterialListItem>\n  );\n}\n\nexport default ListItem;\n","import ListItem from \"./ListItem\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  activeLink: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ListItemLink(props) {\n  const classes = useStyles();\n\n  const linkProps = props.nav\n    ? { component: NavLink, activeClassName: classes.activeLink, exact: true }\n    : { component: Link };\n\n  return (\n    <ListItem\n      icon={props.icon}\n      text={props.text}\n      button={typeof props.button === 'undefined' ? true : props.button}\n      to={props.to}\n      onClick={props.onClick}\n      {...linkProps}\n    />)\n\n}\n","import {\n  ADD_PATIENT_PATH,\n  SEARCH_PATH,\n  SETTINGS_PATH,\n  STATS_PATH,\n} from \"../../App/routePaths\";\nimport {\n  DonutLargeOutlined,\n  SettingsOutlined,\n  AddCircleOutline,\n  SearchOutlined,\n} from \"@material-ui/icons\";\n\nconst navLinks = [\n  { icon: <AddCircleOutline />, text: \"Add Patient\", to: ADD_PATIENT_PATH },\n  { icon: <SearchOutlined />, text: \"Search Patients\", to: SEARCH_PATH },\n  { icon: <DonutLargeOutlined />, text: \"Stats\", to: STATS_PATH },\n  // { icon: <SettingsOutlined />, text: \"Settings\", to: SETTINGS_PATH },\n];\n\nexport default navLinks;\n","import React, { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport List from \"../List\";\nimport ListItem from \"../List/ListItem\";\nimport ListItemLink from \"../List/ListItemLink\";\nimport navLinks from \"./navLinks\";\nimport { connect } from 'react-redux';\nimport { setLoggedIn } from \"../../redux/actions\";\nimport { ExitToApp } from '@material-ui/icons'\nimport { logout } from \"../../utils/APIUtils\";\n\nfunction Drawer(props) {\n\n  return (\n    <Sidebar open={props.open} onClose={props.toggleDrawer}>\n      <List>\n        {navLinks.map((navLink) => (\n          <ListItemLink\n            nav\n            key={navLink.text}\n            onClick={props.toggleDrawer}\n            {...navLink}\n          />\n        ))}\n        <ListItem\n          button\n          onClick={() => { \n            logout();\n            props.setLoggedIn(false);\n          }}\n          icon={<ExitToApp />}\n          text=\"Logout\" />\n      </List>\n    </Sidebar>\n  );\n}\n\nexport default connect(null, { setLoggedIn })(Drawer)","import { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    toolbar: theme.mixins.toolbar,\n  }));\n\nexport default function AppBarSpace(){\n    const classes = useStyles();\n\n    return (\n        <div className={classes.toolbar}></div>\n    );\n}","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar as MaterialAppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport Logo from \"../icons/Logo\";\nimport {Menu as MenuIcon} from '@material-ui/icons'\nimport Drawer from \"../Drawer\";\nimport {Box} from '@material-ui/core/';\nimport AppBarSpace from './AppBarSpace';\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexShrink:0,\n    marginRight:theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  },\n}));\n\nfunction AppBar(props) {\n  const classes = useStyles();\n\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n\n  const toggleDrawer = () => setDrawerOpen(!isDrawerOpen);\n\n  return (\n    <MaterialAppBar>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          aria-label=\"menu\"\n          color='inherit'\n          onClick={toggleDrawer}\n        >\n          <MenuIcon/>\n        </IconButton>\n        <Logo height=\"50px\" width=\"50px\" />\n        <Typography variant=\"h6\" className={classes.title}>\n          {\"Health-M / \" + props.title} \n        </Typography>\n        <Box display='flex' flexGrow='1'>\n        {props.children}\n        </Box>\n      </Toolbar>\n      <Drawer open={isDrawerOpen} toggleDrawer={toggleDrawer} />\n    </MaterialAppBar>\n  );\n}\n\nexport default AppBar;\nexport {AppBarSpace};","import React from \"react\";\nimport AppBar,{AppBarSpace} from \"../AppBar\";\n\nfunction Page(props) {\n  return (\n    <React.Fragment>\n      <AppBar title={props.title} />\n      <AppBarSpace />\n      {props.children}\n    </React.Fragment>\n  );\n}\n\nexport default Page;\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    minHeight: \"250px\",\r\n    margin: theme.spacing(3,0),\r\n    [theme.breakpoints.up('xs')]:{\r\n      width:'90%'\r\n    },\r\n    [theme.breakpoints.up('md')]:{\r\n      width: '70%'\r\n    },\r\n    [theme.breakpoints.up('lg')]:{\r\n      width:'50%'\r\n    }\r\n  },\r\n  centerContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function ResponsivePaper(props) {\r\n  const classes = useStyles();\r\n  const { centerContent, className: propClassName, ...remainingProps } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper\r\n        className={\r\n          classes.paper +\r\n          \" \" +\r\n          (centerContent ? classes.centerContent : \"\") +\r\n          \" \" +\r\n          (propClassName || \"\")\r\n        }\r\n        elevation={3}\r\n        {...remainingProps}\r\n      >\r\n        {props.children}\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import getInitialValues from \"./initialValues\";\nimport { NULL_MEDICAL_CODE } from \"./medicalCodes\";\n// Transform the input values object into an object which conforms to our REST API spec.\nexport function valuesToPatient(values) {\n  const diagnosisTreatmentObj = _diagnosisTreatmentArrayToObj(\n    values.diagnosisTreatment\n  );\n  return { ...values, diagnosisTreatment: diagnosisTreatmentObj };\n}\n\n// Transform a patient Object coming from the REST API into an 'input values' object to use in our form\nexport function patientToValues(patient) {\n  // Get a blank values obj\n  const initialValues = getInitialValues();\n  // The patient object coming from the database might contain some\n  // extra fields, or it might be missing some fields.\n  //  Merge the patient object into the blank intial values object\n  // As it stands now, the patient object and values object share same key naming\n  // So we merge as follows\n  Object.keys(patient)\n    .filter((key) => key in initialValues)\n    .forEach((key) => {\n      initialValues[key] =\n        key === \"diagnosisTreatment\"\n          ? _diagnosisTreatmentObjToArray(patient[key])\n          : patient[key];\n    });\n\n  return initialValues;\n}\n\n// From Db to form \nfunction _diagnosisTreatmentObjToArray(diagnosisTreatmentObj) {\n  let diagnosisTreatmentArray;\n  //Transform the diagnosisTreatmentMap to an array\n  if (Object.keys(diagnosisTreatmentObj).length !== 0) {\n    diagnosisTreatmentArray = Object.keys(diagnosisTreatmentObj).map((key) => ({\n      diagnosis: key,\n      treatment: diagnosisTreatmentObj[key],\n    }));\n  } else {\n    diagnosisTreatmentArray = getInitialValues().diagnosisTreatment;\n  }\n  console.log(diagnosisTreatmentArray);\n  return diagnosisTreatmentArray;\n}\n\n// From form to Db\nfunction _diagnosisTreatmentArrayToObj(diagnosisTreatmentArray) {\n  const diagnosisTreatmentObj = diagnosisTreatmentArray.reduce(\n    (acc, pair) =>\n      pair.diagnosis && pair.diagnosis !== NULL_MEDICAL_CODE\n        ? { ...acc, [pair.diagnosis]: pair.treatment }\n        : acc,\n    {}\n  );\n  return diagnosisTreatmentObj;\n}\n","import PatientForm from \"../../components/PatientForm\";\nimport getInitialValues from \"../../components/PatientForm/initialValues\";\nimport { addPatient } from \"../../utils/APIUtils\";\nimport React, { useState } from \"react\";\nimport Page from \"../../components/layout/Page\";\nimport ResponsivePaper from \"../../components/layout/ResponsivePaper\";\nimport { valuesToPatient } from \"../../components/PatientForm/mapping\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { Redirect } from \"react-router-dom\";\nimport { makePatientLink } from \"../../utils/URLUtils\";\nimport Snackbar from \"../../components/Snackbar\";\n\n// Get an object with the initial values.\nconst initialValues = getInitialValues();\n\nexport default function AddPatient() {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n\n  const [submitState, handleSubmit] = useFetch(\n    async (values) => {\n      const patient = valuesToPatient(values);\n      return await addPatient(patient);\n    },\n    {\n      onSuccess: () => {\n        setFeedbackMessage(\"Patient Submitted. Redirecting you...\");\n      },\n      onError: () => {\n        setFeedbackMessage(\"Something went wrong.\");\n      },\n    }\n  );\n\n  return (\n    <Page title=\"Add Patient\">\n      <ResponsivePaper>\n        <PatientForm initialValues={initialValues} onSubmit={handleSubmit} />\n      </ResponsivePaper>\n      <Snackbar\n        message={feedbackMessage}\n        setMessage={setFeedbackMessage}\n        onClose={() => {\n          if (submitState.value) {\n            setShouldRedirect(true);\n          }\n        }}\n      />\n      {shouldRedirect && <Redirect to={makePatientLink(submitState.value)} />}\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"../inputs/TextField\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { InputAdornment } from \"@material-ui/core\";\n\n// Class component because it will be passed a ref.\nconst SearchInput = React.forwardRef((props, ref) => {\n  const { onSearch, ...otherProps } = props;\n\n  const history = useHistory();\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSearch(props.value);\n      }}\n    >\n      <TextField\n        ref={ref}\n        placeholder={props.placeholder}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={()=>onSearch(props.value)}>\n                <SearchIcon color=\"primary\" />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        {...otherProps}\n      />\n    </form>\n  );\n});\n\nexport default SearchInput;\n","import React from 'react'\nimport { Paper } from \"@material-ui/core\";\n\nconst SuggestionsContainer  = React.forwardRef((props,ref)=>{\n  return <Paper ref={ref} {...props}>{props.children}</Paper>;\n})\n\n\nexport default SuggestionsContainer;\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { makeSearchLink } from \"../../utils/URLUtils\";\nimport ListItem from \"../List/ListItem\";\n\n\nfunction Suggestion(props) {\n\n\n  return (\n    <ListItem\n      icon={<SearchIcon color=\"primary\" />}\n      text={props.value}\n      onClick={()=>console.log('hi')}\n    />\n  );\n}\n\nexport default Suggestion;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useAutoSuggestTheme = makeStyles((theme)=>({\n    autoSuggestRoot: {\n        position: \"relative\",\n      },\n    container: {\n      position: \"relative\",\n    },\n    suggestionsContainer: {\n        width: '100%',\n        position:'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        \"& ul\": {\n          margin: 0,\n          padding: 0,\n          listStyleType: \"none\",\n        }\n      },\n  suggestion: {\n    \"& *\":{\n      userSelect: 'none'\n    }\n  },\n   suggestionHighlighted: {\n     backgroundColor: theme.palette.grey[100]\n   }\n    \n}));\n\nexport default useAutoSuggestTheme;","import React, { useEffect, useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport SearchInput from \"./SearchInput\";\nimport SuggestionsContainer from \"./SuggestionsContainer\";\nimport Suggestion from \"./Suggestion\";\nimport useAutoSuggestAsync from \"./useAutoSuggestAsync\";\nimport useAutoSuggestTheme from \"./useAutoSuggestTheme\";\n\nexport default function SearchBar({\n  value,\n  onChange,\n  getSuggestions,\n  getSuggestionValue,\n  onSuggestionSelected,\n  onSearch,\n  placeholder,\n  className\n}) {\n\n  const theme = useAutoSuggestTheme();\n\n  const { suggestions, setSuggestions, fetchSuggestions } = useAutoSuggestAsync(\n    getSuggestions\n  );\n\n  return (\n    <Autosuggest\n      theme={{...theme ,container: `${theme.container} ${className}`}}\n      onSuggestionsFetchRequested={fetchSuggestions}\n      onSuggestionsClearRequested={() => setSuggestions([])}\n      inputProps={{ value, onChange, placeholder }}\n      renderInputComponent={(inputProps) => (\n        <SearchInput onSearch={onSearch} {...inputProps} />\n      )}\n      renderSuggestionsContainer={({ containerProps, children }) => {\n        return (\n          <SuggestionsContainer {...containerProps}>\n            {children}\n          </SuggestionsContainer>\n        );\n      }}\n      renderSuggestion={(suggestion) => (\n        <Suggestion\n          value={getSuggestionValue(suggestion)}\n        />\n      )}\n      suggestions={suggestions}\n      getSuggestionValue={getSuggestionValue}\n      onSuggestionSelected={(e,{suggestionValue}) => onSearch(suggestionValue)}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useAsyncFn } from \"react-use\";\n\n// getSuggestions should be an async function\nexport default function useAsyncAutoSuggest(getSuggestions) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  // useAsyncFn will return state and a callback that handles\n  // race conditions, and will only update its state if component is still mounted.\n  const [suggestionsFetchState, fetchSuggestions] = useAsyncFn(\n    async ({ value }) => {\n      return await getSuggestions(value);\n    },\n    [getSuggestions]\n  );\n\n  //If the value to suggestionFetchState has changed.\n  useEffect(() => {\n    setSuggestions(suggestionsFetchState.value || []);\n  }, [suggestionsFetchState.value]);\n\n  return { suggestions, setSuggestions, fetchSuggestions };\n}\n","import SearchBar from \"../../components/SearchBar\";\nimport { searchPatients } from \"../../utils/APIUtils\";\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { makePatientSearchLink } from \"../../utils/URLUtils\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchBar: {\n    marginBottom: theme.spacing(1),\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"70%\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"50%\",\n    },\n  },\n}));\n\nexport default function PatientSearchBar() {\n  const classes = useStyles();\n\n  const [value, setValue] = useState(\"\");\n\n  const history = useHistory();\n\n  return (\n    <SearchBar\n      className={classes.searchBar}\n      placeholder=\"Patient Name or Email\"\n      value={value}\n      onChange={(e, { newValue }) => setValue(newValue)}\n      onSearch={(inputValue) => history.push(makePatientSearchLink(inputValue)) }\n      getSuggestions={async (value) => await searchPatients(value, 5, 1)}\n      getSuggestionValue={(patient) => patient.fullName}\n    />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/boy.57ac73f9.svg\";","export default __webpack_public_path__ + \"static/media/girl.6c9c398c.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport boySvg from \"../../assets/boy.svg\";\nimport girlSvg from \"../../assets/girl.svg\";\nimport {makePatientLink} from \"../../utils/URLUtils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 250,\n    width: 250,\n    margin: theme.spacing(2),\n  },\n  cardImg: {\n    objectFit: \"contain\",\n    backgroundColor: theme.palette.grey[200],\n    padding: \"2px\",\n  },\n}));\n\nexport default function PatientCard({ patient, style }) {\n  const classes = useStyles();\n\n  return (\n    <Card style={style} className={classes.root}>\n      <CardActionArea component={Link} to={makePatientLink(patient._id)}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Patient Image\"\n          height=\"140\"\n          image={patient.gender === \"male\" ? boySvg : girlSvg}\n          classes={{ img: classes.cardImg }}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {patient.fullName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {patient.email}\n            <br />\n            {patient.phoneNumber}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import PatientCard from \"./PatientCard\";\nimport { Box, Zoom } from \"@material-ui/core\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"80%\",\n    }\n  },\n}));\n\nexport default function SearchResultsContainer({ results }) {\n\n  const classes = useStyles();\n\n  return (\n    <Box\n      className={classes.container}\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n    >\n      <TransitionGroup enter={true} component={null}>\n        {results.map((patient) => (\n          <Zoom key={patient._id} timeout={750}>\n            <PatientCard patient={patient} />\n          </Zoom>\n        ))}\n      </TransitionGroup>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { CircularProgress, Typography } from \"@material-ui/core\";\n\nexport default function LoadingBox({ loading, error, errorMessage, children }) {\n  return (\n    <React.Fragment>\n      {children}\n      {loading && <CircularProgress />}\n      {error && !loading && (\n        <Typography variant=\"caption\">\n          {errorMessage || \"Something went wrong.\"}\n        </Typography>\n      )}\n    </React.Fragment>\n  );\n}\n","import { searchPatients } from \"../../utils/APIUtils\";\nimport useQuery from \"../../hooks/useQuery\";\nimport { useState, useEffect } from \"react\";\nimport { useAsync } from \"react-use\";\n\nconst RESULTS_PER_PAGE = 10;\n\nexport default function usePatientSearch() {\n  const searchTerm = useQuery().get(\"q\");\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState([]);\n\n  //Reset page to 1 when the search term is changed.\n  useEffect(() => {\n    setTotalResults([]);\n    setPage(1);\n  }, [searchTerm]);\n\n  const fetchState = useAsync(\n    async () => await searchPatients(searchTerm, RESULTS_PER_PAGE, page),\n    [searchTerm, page]\n  );\n\n  useEffect(() => {\n    if (fetchState.value) {\n      const newResults = fetchState.value;\n      setTotalResults((prevResults) => {\n        return [...prevResults, ...newResults];\n      });\n    }\n  }, [fetchState.value]);\n  \n  const hasMoreResults =\n    (fetchState.value ? fetchState.value.length : 0) === RESULTS_PER_PAGE;\n\n  return {\n    searchTerm,\n    page,\n    setPage,\n    totalResults,\n    fetchState,\n    hasMoreResults,\n  };\n  \n}\n","import {useLocation} from 'react-router-dom';\n\nexport default function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }","import {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nexport default function InfoItem(props) {\n  const PropIcon = props.icon;\n  return (\n    <ListItem>\n      <ListItemIcon>\n        <PropIcon />\n      </ListItemIcon>\n      <ListItemText>\n        <Typography variant=\"h6\">{props.title}</Typography>\n        {props.content}\n      </ListItemText>\n    </ListItem>\n  );\n}\n","import { fabric } from \"fabric/dist/fabric\";\nimport PedigreeChartCanvas from './pedigreeChart';\nimport { useEffect,useState } from \"react\";\n\nexport default function StaticPedigreeChart(props) {\n  const {failComponent,...canvasProps} = props;\n  const [loadFailed,setLoadFailed] = useState(false);\n  useEffect(() => {\n    if (!props.chartData){\n      setLoadFailed(true);\n      return;\n    }\n    const fabricCanvas = new fabric.StaticCanvas('fabric-canvas');\n    fabricCanvas.setDimensions(PedigreeChartCanvas.DIMENSIONS);\n    fabricCanvas.setBackgroundColor(PedigreeChartCanvas.BACKGROUND_COLOR);\n    try{\n    fabricCanvas.loadFromJSON(props.chartData)}\n    catch(e){\n      console.error(e);\n      setLoadFailed(true);\n    }\n  }, []);\n  return (!loadFailed ? <canvas id=\"fabric-canvas\" {...canvasProps} /> : props.failComponent);\n}\n","import { Box, Typography, Dialog } from \"@material-ui/core\";\nimport StaticPedigreeChart from \"./StaticPedigreeChart\";\n\nexport default function StaticPedigreeChartDialog(props) {\n  const { isOpen, onClose, chartData } = props;\n\n  return (\n    <Dialog open={isOpen} onClose={onClose}>\n      <StaticPedigreeChart\n        chartData={chartData}\n        failComponent={\n          <Box p={2}>\n            <Typography variant=\"subtitle2\">Not Available</Typography>\n          </Box>\n        }\n      />\n    </Dialog>\n  );\n}\n","import {\n  PermIdentityOutlined,\n  AssignmentOutlined,\n  AssessmentOutlined,\n  PermPhoneMsgOutlined,\n  LocationOnOutlined,\n  EmailOutlined,\n  EventAvailableOutlined,\n  TodayOutlined,\n  CakeOutlined,\n  PageviewOutlined,\n  AccountTreeOutlined,\n  HealingOutlined,\n} from \"@material-ui/icons\";\nimport { List, Button } from \"@material-ui/core\";\nimport InfoItem from \"../../components/List/InfoItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState, Fragment } from \"react\";\nimport StaticPedigreeChartDialog from \"../../components/PedigreeChart/StaticPedigreeChartDialog\";\nimport { capitalizeFirstLetter } from \"../../utils/stringUtils\";\n\nconst useStyles = makeStyles((theme) => ({\n  infoList: {\n    width: \"100%\",\n  },\n}));\n\nexport default function PatientInfoList(props) {\n  const classes = useStyles();\n\n  const [isPedigreeChartDialogOpen, setPedigreeChartDialogOpen] = useState(\n    false\n  );\n\n  const {\n    fullName,\n    gender,\n    birthDate,\n    bodyWeight,\n    address,\n    phoneNumber,\n    email,\n    admissionDate,\n    admittorName,\n    parentsSeparated,\n    parentsSeparatedDescription,\n    parentsDied,\n    parentsDiedDescription,\n    parentsDivorced,\n    parentsDivorcedDescription,\n    stepFamily,\n    stepFamilyDescription,\n    pedigreeChart,\n    diagnosisTreatment,\n  } = props.patient;\n\n  return (\n    <Fragment>\n      <List className={classes.infoList}>\n        {/* Not using map because generated InfoItem content prop is not uniform. */}\n        <InfoItem\n          icon={AssignmentOutlined}\n          title=\"Full Name:\"\n          content={fullName}\n        />\n\n        <InfoItem\n          icon={PermIdentityOutlined}\n          title=\"Gender:\"\n          content={gender ? capitalizeFirstLetter(gender) : \"\"}\n        />\n\n        <InfoItem\n          icon={CakeOutlined}\n          title=\"Birthdate:\"\n          content={new Date(birthDate).toDateString()}\n        />\n\n        <InfoItem\n          icon={AssessmentOutlined}\n          title=\"Weight:\"\n          content={`${bodyWeight} Kg`}\n        />\n\n        <InfoItem\n          icon={LocationOnOutlined}\n          title=\"Address:\"\n          content={address}\n        />\n\n        <InfoItem\n          icon={PermPhoneMsgOutlined}\n          title=\"Phone:\"\n          content={phoneNumber}\n        />\n\n        <InfoItem icon={EmailOutlined} title=\"Email:\" content={email} />\n\n        <InfoItem\n          icon={TodayOutlined}\n          title=\"Admission Date:\"\n          content={new Date(admissionDate).toDateString()}\n        />\n\n        <InfoItem\n          icon={EventAvailableOutlined}\n          title=\"Admittor Name:\"\n          content={admittorName}\n        />\n\n        <InfoItem\n          icon={PageviewOutlined}\n          title=\"Parent Separation:\"\n          content={\n            parentsSeparated\n              ? parentsSeparatedDescription || \"Parents are separated.\"\n              : \"Parents are not separated.\"\n          }\n        />\n\n        <InfoItem\n          icon={PageviewOutlined}\n          title=\"Parents Divorce:\"\n          content={\n            parentsDivorced\n              ? parentsDivorcedDescription || \"Parents are divorced.\"\n              : \"Parents are not divorced.\"\n          }\n        />\n\n        <InfoItem\n          icon={PageviewOutlined}\n          title=\"Parents Death:\"\n          content={\n            parentsDied\n              ? parentsDiedDescription || \"Death has occured.\"\n              : \"Death has not occured.\"\n          }\n        />\n\n        <InfoItem\n          icon={PageviewOutlined}\n          title=\"Stepfamily:\"\n          content={\n            stepFamily\n              ? stepFamilyDescription || \"Stepfamily members exist.\"\n              : \"No stepfamily members exist.\"\n          }\n        />\n\n        <InfoItem\n          icon={AccountTreeOutlined}\n          title=\"Pedigree Chart:\"\n          content={\n            <Button\n              variant=\"outlined\"\n              onClick={() => setPedigreeChartDialogOpen(true)}\n            >\n              View Chart\n            </Button>\n          }\n        />\n\n        {Object.keys(diagnosisTreatment).map((key) => (\n          <InfoItem\n            key={key}\n            icon={HealingOutlined}\n            title={key}\n            content={diagnosisTreatment[key] || \"No Treatment.\"}\n          />\n        ))}\n      </List>\n\n      <StaticPedigreeChartDialog\n        isOpen={isPedigreeChartDialogOpen}\n        onClose={() => {\n          setPedigreeChartDialogOpen(false);\n        }}\n        chartData={pedigreeChart}\n      />\n    </Fragment>\n  );\n}\n","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }","import TextField from \"../../components/inputs/TextField\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@material-ui/core\";\nimport {useState} from 'react';\n\nexport default function DeletePatientDialog({\n  open,\n  onClose,\n  onDelete,\n  confirmationWord\n}) {\n  \n  const [enteredConfirmationWord, setEnteredConfirmationWord] = useState(\"\");\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Are you sure?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm that you would like to delete this patient by entering <b>{confirmationWord}</b>\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Patient Email Address\"\n          type=\"email\"\n          fullWidth\n          value={enteredConfirmationWord}\n          onChange={(e)=> setEnteredConfirmationWord(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button disabled={enteredConfirmationWord!==confirmationWord} onClick={onDelete} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Box, Fab } from \"@material-ui/core\";\nimport DeletePatientDialog from \"./DeletePatientDialog\";\nimport ProgressButton from \"../../components/inputs/ProgressButton\";\nimport { deletePatient as delPatient } from \"../../utils/APIUtils\";\nimport React, { useState } from \"react\";\nimport Snackbar from \"../../components/Snackbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { DeleteForeverOutlined, EditOutlined } from \"@material-ui/icons\";\nimport { SEARCH_PATH } from \"../../App/routePaths\";\nimport useFetch from \"../../hooks/useFetch\";\nimport {Link} from \"react-router-dom\";\nimport { makePatientEditLink } from \"../../utils/URLUtils\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n}));\n\nexport default function PatientControls(props) {\n  const classes = useStyles();\n\n  const { _id: id, email } = props.patient;\n\n  const [feedbackMessage, setFeedbackMessage] = useState(false);\n\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  const [deletionState, deletePatient] = useFetch(\n    async () => await delPatient(id),\n    {\n      onSuccess: () =>\n        setFeedbackMessage(\"Patient deleted! Redirecting you...\"),\n      onError: () =>\n        setFeedbackMessage(\"Something went wrong while deleting...\"),\n    },\n    [id]\n  );\n\n  const { loading, value: hasDeleted } = deletionState;\n\n  return (\n    <Box display=\"flex\" width=\"100%\" flexDirection=\"row-reverse\">\n      <ProgressButton\n        isWorking={loading}\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<DeleteForeverOutlined></DeleteForeverOutlined>}\n        onClick={() => setIsDeleteDialogOpen(true)}\n      >\n        Delete Patient\n      </ProgressButton>\n\n      <DeletePatientDialog\n        open={isDeleteDialogOpen}\n        onClose={() => setIsDeleteDialogOpen(false)}\n        onDelete={() => {\n          setIsDeleteDialogOpen(false);\n          deletePatient();\n        }}\n        confirmationWord={email}\n      />\n\n      <Fab\n        className={classes.fab}\n        color=\"primary\"\n        to={makePatientEditLink(id)}\n        component={Link}\n      >\n        <EditOutlined />\n      </Fab>\n\n      <Snackbar\n        message={feedbackMessage}\n        setMessage={setFeedbackMessage}\n        onClose={() => {\n          hasDeleted && setShouldRedirect(true);\n        }}\n      />\n\n      {shouldRedirect && <Redirect to={SEARCH_PATH} />}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport ResponsivePaper from \"../../components/layout/ResponsivePaper\";\nimport { getPatient } from \"../../utils/APIUtils\";\nimport PatientInfoList from \"./PatientInfoList\";\nimport { useParams, useLocation, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useAsync } from \"react-use\";\nimport LoadingBox from \"../../components/LoadingBox\";\nimport Page from \"../../components/layout/Page\";\nimport boySvg from \"../../assets/boy.svg\";\nimport girlSvg from \"../../assets/girl.svg\";\nimport PatientControls from \"./PatientControls\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: { position: \"relative\" },\n  patientImg: {\n    padding: theme.spacing(1),\n    objectFit: \"cover\",\n    backgroundColor: theme.palette.grey[200],\n    borderRadius: theme.spacing(1),\n    width: \"70%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      position: \"absolute\",\n      right: theme.spacing(3),\n      top: theme.spacing(3),\n      width: 250,\n      height: 250,\n    },\n  },\n}));\n\nexport default function ViewPatient() {\n  const classes = useStyles();\n\n  const { id } = useParams();\n\n  const fetchState = useAsync(async () => await getPatient(id), [id]);\n\n  const { value: patient, loading, error } = fetchState;\n\n  return (\n    <Page title=\"View Patient\">\n      <ResponsivePaper className={classes.paper} centerContent={true}>\n        <LoadingBox loading={loading} error={error}>\n          {patient && (\n            <React.Fragment>\n              <img\n                className={classes.patientImg}\n                src={patient.gender === \"male\" ? boySvg : girlSvg}\n              />\n              <PatientInfoList patient={patient} />\n              <PatientControls patient={patient} />\n            </React.Fragment>\n          )}\n        </LoadingBox>\n      </ResponsivePaper>\n    </Page>\n  );\n}\n","export const schema = {\n  FULL_NAME: \"fullName\",\n  GENDER: \"gender\",\n  EMAIL: \"email\",\n  BODY_WEIGHT: \"bodyWeight\",\n  BIRTH_DATE: \"birthDate\",\n  ADDRESS: \"address\",\n  PHONE_NUMBER: \"phoneNumber\",\n  PEDIGREE_CHART: \"pedigreeChart\",\n  ADMITTOR_NAME: \"admittorName\",\n  ADMISSION_DATE: \"admissionDate\",\n  PARENTS_SEPARATED: \"parentsSeparated\",\n  PARENTS_SEPARATED_DESCRIPTION: \"parentsSeparatedDescription\",\n  PARENTS_DIVORCED: \"parentsDivorced\",\n  PARENTS_DIVORCED_DESCRIPTION: \"parentsDivorcedDescription\",\n  PARENTS_DIED: \"parentsDied\",\n  PARENTS_DIED_DESCRIPTION: \"parentsDiedDescription\",\n  STEP_FAMILY: \"stepFamily\",\n  STEP_FAMILY_DESCRIPTION: \"stepFamilyDescription\",\n  DOCTOR_NOTES: \"doctorNotes\",\n  DIAGNOSIS_TREATMENT: \"diagnosisTreatment\",\n};\n","import { Paper, Button, Box } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport HMCheckbox from \"../../components/inputs/Checkbox\";\nimport { FilterList } from \"@material-ui/icons\";\nimport { schema as patientSchema } from \"../../models/patient\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  filterButton: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nconst checkboxes = [\n  { label: \"Parents Death\", name: patientSchema.PARENTS_DIED },\n  { label: \"Parents Separation\", name: patientSchema.PARENTS_SEPARATED },\n  { label: \"Parents Divorce\", name: patientSchema.PARENTS_DIVORCED },\n  { label: \"Stepfamily\", name: patientSchema.STEP_FAMILY },\n];\n\nexport default function DatasetFilterPanel(props) {\n\n  const classes = useStyles();\n\n  const { filter, setFilter, isFilterActive, setIsFilterActive } = props;\n\n  const handleCheckboxChange = (e) => {\n    const newFilter = {\n      ...filter,\n      [e.target.name]: !filter[e.target.name],\n    };\n    setFilter(newFilter);\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.root}>\n      {checkboxes.map(({ name, label }) => (\n        <HMCheckbox\n          key={name}\n          name={name}\n          label={label}\n          checked={filter[name]}\n          onChange={handleCheckboxChange}\n          disabled={!isFilterActive}\n        />\n      ))}\n      <Button\n        className={classes.filterButton}\n        variant=\"contained\"\n        color={isFilterActive ? \"primary\" : \"secondary\"}\n        startIcon={<FilterList />}\n        onClick={() => setIsFilterActive(!isFilterActive)}\n      >\n        {isFilterActive ? \"ON\" : \"OFF\"}\n      </Button>\n    </Paper>\n  );\n}\n","\nexport function makeChartData(patients) {\n\n  const medicalCodeCount = _getMedicalCodeCount(patients);\n  const labels = Object.keys(medicalCodeCount);\n  const data = Object.values(medicalCodeCount);\n  const { medicalCodeColors, medicalCodeBorderColors } = _getMedicalCodeColors(\n    labels.length\n  );\n\n  const chartData = labels.length > 0 ? {\n    labels,\n    datasets: [\n      {\n        label: \"Patients\",\n        data,\n        backgroundColor: medicalCodeColors,\n        hoverBackgroundColor: medicalCodeColors,\n        hoverBorderColor: medicalCodeColors,\n        borderColor: medicalCodeBorderColors,\n        borderWidth: 1,\n      },\n    ],\n  } :\n    blankChartData\n\n  return chartData;\n};\n\n\n// Returns an object which contains\n// medicalCode as a key, and the number of occurences as a value.\n// NEED TO IMPROVE READABILITY\nfunction _getMedicalCodeCount(patients) {\n\n  const medicalCodesCount = {};\n  //For each patient\n  for (let i = 0; i < patients.length; i++) {\n    const patientMedicalCodes = Object.keys(patients[i].diagnosisTreatment);\n    for (let j = 0; j < patientMedicalCodes.length; j++) {\n      const patientMedicalCode = patientMedicalCodes[j];\n      const oldCount = medicalCodesCount[patientMedicalCode]\n      medicalCodesCount[patientMedicalCode] = oldCount ?\n        oldCount + 1 : 1;\n    }\n  }\n  return medicalCodesCount;\n}\n\n// Returns a an object which contains\n// an array of background colors\n// an array of border colors\nfunction _getMedicalCodeColors(colorCount) {\n  const medicalCodeColors = [];\n  const medicalCodeBorderColors = [];\n\n  for (let i = 0; i < colorCount; i++) {\n    medicalCodeColors.push(\n      `hsla(${360 * (i / colorCount)},100%,60%,0.2)`\n    );\n    medicalCodeBorderColors.push(\n      `hsl(${360 * (i / colorCount)},100%,60%,1)`\n    );\n  }\n  return { medicalCodeColors, medicalCodeBorderColors };\n}\n\nconst blankChartData = {\n  labels: ['No Results Found'],\n  datasets: [\n    {\n      label: \"No Results Found\",\n      data: [1],\n      backgroundColor: 'hsla(200,100%,60%,0.2)',\n      borderColor: 'hsla(200,100%,60%,1)',\n      borderWidth: 1,\n    },\n  ],\n}","import { useEffect, useState } from \"react\";\nimport { useAsync } from \"react-use\";\nimport { searchPatients } from \"../../utils/APIUtils\";\nimport { makeChartData } from \"./chartUtils\";\n\nexport default function useChartData(isFilterActive,filter) {\n  const patientsLoadState = useAsync(async () => await searchPatients(), []);\n\n  const { value: patients } = patientsLoadState;\n\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    if (patients) {\n      const basePatients = isFilterActive ?  filterPatients(patients, filter) : patients;\n      const chartData = makeChartData(basePatients);\n      setChartData(chartData);\n    }\n  }, [patients,isFilterActive,filter]);\n\n  return [patientsLoadState, chartData];\n}\n\n\nfunction filterPatients(patients, filter) {\n  if (!filter) {\n    return patients;\n  }\n\n  // A patient matches the filter, if all the values in the\n  // patient filter match the ones in patient\n  const isPatientMatch = (patient) => {\n    const filterKeys = Object.keys(filter);\n    const matchingKeys = filterKeys.filter(\n      (key) => filter[key] === patient[key]\n    );\n    return matchingKeys.length === Object.keys(filter).length;\n  };\n\n  const filteredPatients = patients.filter((patient) =>\n    isPatientMatch(patient)\n  );\n  return filteredPatients;\n}\n","import { Button, Paper, Zoom } from \"@material-ui/core\";\nimport ResponsivePaper from \"../../components/layout/ResponsivePaper\";\nimport { connect } from \"react-redux\";\nimport { mapLanguageToProps } from \"../../redux/mapState\";\nimport { setLanguage } from \"../../redux/actions\";\nimport { useState } from \"react\";\n\nfunction SettingsPage(props) {\n  const [anim, setAnim] = useState(false);\n\n  return (\n    <Paper>\n      <Button\n        onClick={() => {\n          props.setLanguage(\"ar\");\n          setAnim(!anim);\n        }}\n        variant=\"outlined\"\n      >\n        {props.language}\n      </Button>\n        <Paper elevation={4}>\n          <svg>\n            <polygon points=\"0,100 50,00, 100,100\" />\n          </svg>\n        </Paper>\n    </Paper>\n  );\n}\n\nexport default connect(mapLanguageToProps, { setLanguage })(SettingsPage);\n","export const mapLanguageToProps = (state) => ({ language: state.language });\n","import {\n  ADD_PATIENT_PATH,\n  EDIT_PATIENT_PATH,\n  SEARCH_PATH,\n  SETTINGS_PATH,\n  STATS_PATH,\n  VIEW_PATIENT_PATH,\n} from \"./routePaths\";\n\nimport AddPatient from \"../pages/AddPatient\";\nimport SearchPatients from \"../pages/SearchPatients\";\nimport ViewPatient from \"../pages/ViewPatient\";\nimport EditPatient from \"../pages/EditPatient\";\nimport Stats from \"../pages/Stats\";\nimport Settings from \"../pages/Settings\";\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst routes = [\n  { path: EDIT_PATIENT_PATH, Component: EditPatient },\n  { path: VIEW_PATIENT_PATH, Component: ViewPatient },\n  { path: SEARCH_PATH, Component: SearchPatients },\n  { path: STATS_PATH, Component: Stats },\n  { path: SETTINGS_PATH, Component: Settings },\n  { path: ADD_PATIENT_PATH, Component: AddPatient },\n  { path: \"/\", Component: () => <Redirect to={SEARCH_PATH} /> },\n];\n\nexport default routes;\n","import PatientForm from \"../../components/PatientForm\";\nimport { updatePatient as upPatient } from \"../../utils/APIUtils\";\nimport React, { useState } from \"react\";\nimport { valuesToPatient } from \"../../components/PatientForm/mapping\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport Page from \"../../components/layout/Page\";\nimport ResponsivePaper from \"../../components/layout/ResponsivePaper\";\nimport usePatientInputValues from \"./usePatientInputValues\";\nimport { makePatientLink } from \"../../utils/URLUtils\";\nimport useFetch from \"../../hooks/useFetch\";\nimport LoadingBox from \"../../components/LoadingBox\";\nimport Snackbar from \"../../components/Snackbar\";\n\nexport default function EditPatient() {\n  const { id } = useParams();\n\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  const [patientLoadState, patientInputValues] = usePatientInputValues(id);\n\n  const {\n    loading: isPatientLoading,\n    error: patientLoadError,\n  } = patientLoadState;\n\n  const [ patientUpdateState, updatePatient ] = useFetch(\n    async (inputValues) => {\n      const patient = valuesToPatient(inputValues);\n      return await upPatient(id, patient);\n    },\n    {\n      onSuccess: () =>\n        setFeedbackMessage(\"Patient updated! Redirecting you...\"),\n      onError: () => setFeedbackMessage(\"Something went wrong!\"),\n    },\n    [id]\n  );\n\n  return (\n    <Page title=\"Edit Patient\">\n      <ResponsivePaper centerContent>\n        <LoadingBox loading={isPatientLoading} error={patientLoadError}>\n          {patientInputValues && (\n            <PatientForm\n              initialValues={patientInputValues}\n              onSubmit={updatePatient}\n            />\n          )}\n        </LoadingBox>\n        </ResponsivePaper>\n\n        <Snackbar\n          message={feedbackMessage}\n          setMessage={setFeedbackMessage}\n          onClose={() => {\n            if (patientUpdateState.value) {\n              setShouldRedirect(true);\n            }\n          }}\n        />\n        {shouldRedirect && <Redirect to={makePatientLink(id)} />}\n    </Page>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getPatient } from \"../../utils/APIUtils\";\nimport { patientToValues } from \"../../components/PatientForm/mapping\";\nimport { useAsync } from \"react-use\";\n\nexport default function usePatientValues(id) {\n  const patientLoadState = useAsync(async () => await getPatient(id), [id]);\n  const [patientInputValues, setPatientInputValues] = useState();\n\n  useEffect(() => {\n    let patient = patientLoadState.value;\n    if (patient) {\n      setPatientInputValues(patientToValues(patient));\n    }\n  }, [patientLoadState.value]);\n\n  return [patientLoadState, patientInputValues];\n}\n","import React from \"react\";\nimport PatientSearchBar from \"./PatientSearchBar\";\nimport SearchResultsGrid from \"./SearchResultsGrid\";\nimport Page from \"../../components/layout/Page\";\nimport LoadingBox from \"../../components/LoadingBox\";\nimport { Typography } from \"@material-ui/core\";\nimport usePatientSearch from \"./usePatientSearch\";\nimport { InView } from \"react-intersection-observer\";\n\nexport default function SearchPatients() {\n  const {\n    setPage,\n    totalResults,\n    fetchState,\n    hasMoreResults,\n  } = usePatientSearch();\n\n  const { loading, error } = fetchState;\n\n  return (\n    <Page title=\"Search Patients\">\n      <PatientSearchBar />\n      <LoadingBox loading={loading} error={error}>\n        <SearchResultsGrid results={totalResults} />\n        {!loading && totalResults.length === 0 && (\n          <Typography variant=\"caption\">No results</Typography>\n        )}\n      </LoadingBox>\n      {!loading && hasMoreResults && (\n        <InView\n          as=\"div\"\n          onChange={(inView) => inView && setPage((page) => page + 1)}\n        />\n      )}\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport ResponsivePaper from \"../../components/layout/ResponsivePaper\";\nimport FilterPanel from \"./FilterPanel\";\nimport { Typography,Box } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport Page from \"../../components/layout/Page\";\nimport useChartData from \"./useChartData\";\nimport LoadingBox from \"../../components/LoadingBox\";\nimport { Fragment } from \"react\";\nimport { schema as patientSchema } from \"../../models/patient\";\n\nexport default function StatsPage() {\n  const [filter, setFilter] = useState({\n    [patientSchema.PARENTS_DIED]: false,\n    [patientSchema.PARENTS_DIVORCED]: false,\n    [patientSchema.PARENTS_SEPARATED]: false,\n    [patientSchema.STEP_FAMILY]: false,\n  });\n\n  const [isFilterActive, setIsFilterActive] = useState(false);\n\n  const [fetchState, chartData] = useChartData(isFilterActive, filter);\n\n  const { loading, error } = fetchState;\n\n  return (\n    <Page title=\"Stats\">\n      <ResponsivePaper centerContent={true}>\n        <LoadingBox loading={loading} error={error}>\n          {!loading && chartData && (\n            <Fragment>\n              <Typography variant=\"h5\">Medical Codes</Typography>\n              <Doughnut data={chartData} />\n              <Box mt={4} display=\"flex\" width=\"100%\" flexDirection=\"row-reverse\">\n              <FilterPanel\n                filter={filter}\n                setFilter={setFilter}\n                isFilterActive={isFilterActive}\n                setIsFilterActive={setIsFilterActive}\n              />\n              </Box>\n            </Fragment>\n          )}\n        </LoadingBox>\n      </ResponsivePaper>\n    </Page>\n  );\n}\n","import { Box } from \"@material-ui/core\";\n\nfunction Main(props) {\n    const {children,...otherProps} = props; \n  return (\n    <Box\n      component=\"main\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      width=\"100%\"\n      {...otherProps}\n    >{children}</Box>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\nimport { LOGIN_PATH } from \"./routePaths\";\r\nimport Main from \"../components/layout/Main\";\r\n\r\nexport default function GuardedApp(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.loggedIn ? (\r\n        <Main>\r\n          <Switch>\r\n            {routes.map((route) => (\r\n              <Route\r\n                key={route.path}\r\n                path={route.path}\r\n                component={route.Component}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Main>\r\n      ) : (\r\n        <Redirect to={LOGIN_PATH} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Logo from '../icons/Logo';\nimport { Typography, LinearProgress, Zoom } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        alignItems: \"flex-start\",\n        paddingTop: theme.spacing(12),\n        backgroundColor: theme.palette.primary.dark,\n\n    },\n    content:{\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"center\",\n        color:'white'\n    },\n    progress:{\n        width:\"75%\",\n    },\n    logo:{\n        margin:theme.spacing(4)\n    }\n\n}));\n\nexport default function LoadingBackdrop(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Backdrop className={classes.backdrop} open={props.open}>\n            <Zoom in={true} timeout={1000}>\n                <div className={classes.content}>\n                    <Typography variant=\"h2\">Health-M</Typography>\n                    <Logo className={classes.logo} height=\"128px\" width=\"128px\" />\n                    <LinearProgress color=\"secondary\" className={classes.progress} />\n                </div>\n            </Zoom>\n        </Backdrop>);\n}","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { LOGIN_PATH } from \"./routePaths\";\r\nimport LoginPage from \"../pages/Login\";\r\nimport GuardedApp from \"./GuardedApp\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLoggedIn } from \"../redux/actions\";\r\nimport { useAsync } from \"react-use\";\r\nimport { verifyLoggedIn } from \"../utils/APIUtils\";\r\nimport LoadingBackdrop from \"../components/LoadingBackdrop\";\r\n\r\nfunction App(props) {\r\n\r\n  const loginVerification = useAsync(async () => {\r\n    const response = await verifyLoggedIn();\r\n    props.setLoggedIn(true);\r\n    return response;\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {loginVerification.loading ?\r\n        <LoadingBackdrop open={true}/> :\r\n        <Router>\r\n          <Switch>\r\n            <Route path={LOGIN_PATH} component={LoginPage} />\r\n            <GuardedApp loggedIn={props.loggedIn} />\r\n          </Switch>\r\n        </Router>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({ loggedIn: state.loggedIn }), {\r\n  setLoggedIn,\r\n})(App);\r\n","export const ENGLISH = 'english';","import { ENGLISH } from \"../../constants/langauges\";\nimport { SET_LANGUAGE } from \"../actionTypes\";\n\nconst language = (state = ENGLISH, action) => {\n  switch (action.type) {\n    case SET_LANGUAGE: {\n      return action.payload.language;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default language;","import { SET_MESSAGE } from \"../actionTypes\";\n\nconst message = (state = \"\", action) => {\n  switch (action.Type) {\n    case SET_MESSAGE: {\n      return action.payload.message;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default message;","import { SET_LOGGED_IN } from \"../actionTypes\";\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN: {\n      return action.payload.loggedIn;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default loggedIn;","import {combineReducers} from \"redux\";\nimport language from \"./language\";\nimport message from \"./message\";\nimport loggedIn from \"./loggedIn\";\n\nexport default combineReducers({ language, message, loggedIn });\n","import {createStore} from 'redux';\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer);","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"react-root\")\n);\n"],"sourceRoot":""}